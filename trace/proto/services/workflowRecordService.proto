syntax = "proto3";
package services;
option go_package = ".;services";
import "common/base.proto";
import "workflowRecordMetaService.proto";

service WorkflowRecordService {
    rpc Create (WorkflowRecord) returns (WorkflowRecordResponse);
    rpc Update (WorkflowRecord) returns (WorkflowRecordResponse);
    rpc Search (WorkflowRecordWhere) returns (WorkflowRecordResponse);
    rpc Delete (WorkflowRecordWhere) returns (WorkflowRecordResponse);
    rpc Get (WorkflowRecordWhere) returns (WorkflowRecordResponse);
    rpc Check (WorkflowRecordWhere) returns (WorkflowRecordResponse);
    rpc List (WorkflowRecordWhere) returns (WorkflowRecordResponse);
}

service MyWorkflowRecordService {
    rpc Create (WorkflowRecord) returns (WorkflowRecordResponse);
    rpc Update (WorkflowRecord) returns (WorkflowRecordResponse);
    rpc Get (WorkflowRecordWhere) returns (WorkflowRecordResponse);
    rpc Search (WorkflowRecordWhere) returns (WorkflowRecordResponse);
    rpc List (WorkflowRecordWhere) returns (WorkflowRecordResponse);
}

service FrontWorkflowRecordService {
    rpc Get (WorkflowRecordWhere) returns (WorkflowRecordResponse);
    rpc Search (WorkflowRecordWhere) returns (WorkflowRecordResponse);
    rpc List (WorkflowRecordWhere) returns (WorkflowRecordResponse);
}

message WorkflowRecordWhere {
    int32 paged = 1;
    int32 page_size = 2;
    int64 id = 3;
    // @inject_tag: gorm:"-"
    repeated int64 ids = 4;
    string keywords = 5;
    int64 product_id = 6;
    int64 workflow_step_id = 7;
    string role_type = 8;
    int64 role_id = 9;
    int32 status = 10;
    int64 product_batch_id = 11;
    int64 workflow_id = 12;
    bool ok = 13;
    string remark = 14;
}

message WorkflowRecord {
    int64 id = 1;
    int64 product_id = 2;
    int64 product_batch_id = 3;
    int64 workflow_id = 4;
    int64 workflow_step_id = 5;
    string role_type = 6;
    int64 role_id = 7;
    string role_name = 8;
    int32 status = 9;
    string check_remark = 10;
    string check_at = 11;
    string created_at = 12;
    string updated_at = 13;
    repeated WorkflowRecordMeta metas = 14;
}

message WorkflowRecordResponse {
    common.Error error = 1;
    common.Info info = 2;
    common.Pager pager = 3;
    WorkflowRecord entity = 4;
    repeated WorkflowRecord items = 5;
}