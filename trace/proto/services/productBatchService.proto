syntax = "proto3";
package services;
option go_package = ".;services";
import "common/base.proto";
import "productService.proto";
import "workflowService.proto";

service ProductBatchService {
    rpc Create (ProductBatch) returns (ProductBatchResponse);
    rpc Update (ProductBatch) returns (ProductBatchResponse);
    rpc Search (ProductBatchWhere) returns (ProductBatchResponse);
    rpc Delete (ProductBatchWhere) returns (ProductBatchResponse);
    rpc Get (ProductBatchWhere) returns (ProductBatchResponse);
    rpc SetStatus (ProductBatchWhere) returns (ProductBatchResponse);
    rpc List (ProductBatchWhere) returns (ProductBatchResponse);
}

service FrontProductBatchService {
    rpc Get (ProductBatchWhere) returns (ProductBatchResponse);
}

message ProductBatchWhere {
    int32 paged = 1;
    int32 page_size = 2;
    int64 id = 3;
    // @inject_tag: gorm:"-"
    repeated int64 ids = 4;
    string keywords = 5;
    int64 product_id = 6;
    int64 workflow_id = 7;
    int32 status = 8;
}

message ProductBatch {
    int64 id = 1;
    int64 product_id = 2;
    int64 workflow_id = 3;
    string batch_no = 4;
    string produce_date = 5;
    string expire_date = 6;
    int32 shelf_life_unit = 7;
    int32 shelf_life = 8;
    string content = 9;
    string memo = 10;
    int32 status = 11;
    string created_at = 12;
    string updated_at = 13;
    Product product = 14;
    Workflow workflow = 15;
}

message ProductBatchResponse {
    common.Error error = 1;
    common.Info info = 2;
    common.Pager pager = 3;
    ProductBatch entity = 4;
    repeated ProductBatch items = 5;
}