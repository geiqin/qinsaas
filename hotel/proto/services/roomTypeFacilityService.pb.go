// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: roomTypeFacilityService.proto

package services

import (
	common "github.com/geiqin/microkit/protobuf/common"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RoomTypeFacility struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: validate:"required",label:"服务类型"
	RoomTypeFacilityCatId int32 `protobuf:"varint,2,opt,name=room_type_facility_cat_id,json=roomTypeFacilityCatId,proto3" json:"room_type_facility_cat_id,omitempty" validate:"required" label:"服务类型"`
	// @inject_tag: validate:"required",label:"服务名称"
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" validate:"required" label:"服务名称"`
	// @inject_tag: validate:"required",label:"服务图标"
	Icon      string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty" validate:"required" label:"服务图标"`
	CreatedAt string `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt string `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *RoomTypeFacility) Reset() {
	*x = RoomTypeFacility{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomTypeFacilityService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomTypeFacility) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomTypeFacility) ProtoMessage() {}

func (x *RoomTypeFacility) ProtoReflect() protoreflect.Message {
	mi := &file_roomTypeFacilityService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomTypeFacility.ProtoReflect.Descriptor instead.
func (*RoomTypeFacility) Descriptor() ([]byte, []int) {
	return file_roomTypeFacilityService_proto_rawDescGZIP(), []int{0}
}

func (x *RoomTypeFacility) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoomTypeFacility) GetRoomTypeFacilityCatId() int32 {
	if x != nil {
		return x.RoomTypeFacilityCatId
	}
	return 0
}

func (x *RoomTypeFacility) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoomTypeFacility) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *RoomTypeFacility) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *RoomTypeFacility) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type RoomTypeFacilityWhere struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged                 int32   `protobuf:"varint,1,opt,name=paged,proto3" json:"paged,omitempty"`
	PageSize              int32   `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Top                   int32   `protobuf:"varint,3,opt,name=top,proto3" json:"top,omitempty"`
	Keywords              string  `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords,omitempty"`
	Id                    int32   `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
	Ids                   []int32 `protobuf:"varint,6,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	RoomTypeFacilityCatId int32   `protobuf:"varint,7,opt,name=room_type_facility_cat_id,json=roomTypeFacilityCatId,proto3" json:"room_type_facility_cat_id,omitempty"`
}

func (x *RoomTypeFacilityWhere) Reset() {
	*x = RoomTypeFacilityWhere{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomTypeFacilityService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomTypeFacilityWhere) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomTypeFacilityWhere) ProtoMessage() {}

func (x *RoomTypeFacilityWhere) ProtoReflect() protoreflect.Message {
	mi := &file_roomTypeFacilityService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomTypeFacilityWhere.ProtoReflect.Descriptor instead.
func (*RoomTypeFacilityWhere) Descriptor() ([]byte, []int) {
	return file_roomTypeFacilityService_proto_rawDescGZIP(), []int{1}
}

func (x *RoomTypeFacilityWhere) GetPaged() int32 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *RoomTypeFacilityWhere) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *RoomTypeFacilityWhere) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *RoomTypeFacilityWhere) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *RoomTypeFacilityWhere) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoomTypeFacilityWhere) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *RoomTypeFacilityWhere) GetRoomTypeFacilityCatId() int32 {
	if x != nil {
		return x.RoomTypeFacilityCatId
	}
	return 0
}

type RoomTypeFacilityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error  *common.Error       `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Info   *common.Info        `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	Pager  *common.Pager       `protobuf:"bytes,3,opt,name=pager,proto3" json:"pager,omitempty"`
	Entity *RoomTypeFacility   `protobuf:"bytes,4,opt,name=entity,proto3" json:"entity,omitempty"`
	Items  []*RoomTypeFacility `protobuf:"bytes,5,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *RoomTypeFacilityResponse) Reset() {
	*x = RoomTypeFacilityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomTypeFacilityService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomTypeFacilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomTypeFacilityResponse) ProtoMessage() {}

func (x *RoomTypeFacilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_roomTypeFacilityService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomTypeFacilityResponse.ProtoReflect.Descriptor instead.
func (*RoomTypeFacilityResponse) Descriptor() ([]byte, []int) {
	return file_roomTypeFacilityService_proto_rawDescGZIP(), []int{2}
}

func (x *RoomTypeFacilityResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RoomTypeFacilityResponse) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *RoomTypeFacilityResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *RoomTypeFacilityResponse) GetEntity() *RoomTypeFacility {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *RoomTypeFacilityResponse) GetItems() []*RoomTypeFacility {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_roomTypeFacilityService_proto protoreflect.FileDescriptor

var file_roomTypeFacilityService_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc2, 0x01, 0x0a,
	0x10, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x38, 0x0a, 0x19, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x66,
	0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x46, 0x61,
	0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0xd4, 0x01, 0x0a, 0x15, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x46, 0x61,
	0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x57, 0x68, 0x65, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x6f, 0x70,
	0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x38,
	0x0a, 0x19, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x66, 0x61, 0x63, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x15, 0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x43, 0x61, 0x74, 0x49, 0x64, 0x22, 0xec, 0x01, 0x0a, 0x18, 0x52, 0x6f, 0x6f,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x72, 0x12, 0x32, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x06, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x32, 0xe4, 0x03, 0x0a, 0x17, 0x52, 0x6f, 0x6f, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x57, 0x68, 0x65, 0x72, 0x65, 0x1a, 0x22,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4b, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x46, 0x61,
	0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x57, 0x68, 0x65, 0x72, 0x65, 0x1a, 0x22, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x46,
	0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4a, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x57, 0x68, 0x65, 0x72, 0x65, 0x1a, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x1a, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0x22, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x46,
	0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4d, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x46, 0x61, 0x63,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x57, 0x68, 0x65, 0x72, 0x65, 0x1a, 0x22, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x46, 0x61,
	0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0c,
	0x5a, 0x0a, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_roomTypeFacilityService_proto_rawDescOnce sync.Once
	file_roomTypeFacilityService_proto_rawDescData = file_roomTypeFacilityService_proto_rawDesc
)

func file_roomTypeFacilityService_proto_rawDescGZIP() []byte {
	file_roomTypeFacilityService_proto_rawDescOnce.Do(func() {
		file_roomTypeFacilityService_proto_rawDescData = protoimpl.X.CompressGZIP(file_roomTypeFacilityService_proto_rawDescData)
	})
	return file_roomTypeFacilityService_proto_rawDescData
}

var file_roomTypeFacilityService_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_roomTypeFacilityService_proto_goTypes = []interface{}{
	(*RoomTypeFacility)(nil),         // 0: services.RoomTypeFacility
	(*RoomTypeFacilityWhere)(nil),    // 1: services.RoomTypeFacilityWhere
	(*RoomTypeFacilityResponse)(nil), // 2: services.RoomTypeFacilityResponse
	(*common.Error)(nil),             // 3: common.Error
	(*common.Info)(nil),              // 4: common.Info
	(*common.Pager)(nil),             // 5: common.Pager
}
var file_roomTypeFacilityService_proto_depIdxs = []int32{
	3,  // 0: services.RoomTypeFacilityResponse.error:type_name -> common.Error
	4,  // 1: services.RoomTypeFacilityResponse.info:type_name -> common.Info
	5,  // 2: services.RoomTypeFacilityResponse.pager:type_name -> common.Pager
	0,  // 3: services.RoomTypeFacilityResponse.entity:type_name -> services.RoomTypeFacility
	0,  // 4: services.RoomTypeFacilityResponse.items:type_name -> services.RoomTypeFacility
	1,  // 5: services.RoomTypeFacilityService.Search:input_type -> services.RoomTypeFacilityWhere
	1,  // 6: services.RoomTypeFacilityService.List:input_type -> services.RoomTypeFacilityWhere
	1,  // 7: services.RoomTypeFacilityService.Get:input_type -> services.RoomTypeFacilityWhere
	0,  // 8: services.RoomTypeFacilityService.Create:input_type -> services.RoomTypeFacility
	0,  // 9: services.RoomTypeFacilityService.Update:input_type -> services.RoomTypeFacility
	1,  // 10: services.RoomTypeFacilityService.Delete:input_type -> services.RoomTypeFacilityWhere
	2,  // 11: services.RoomTypeFacilityService.Search:output_type -> services.RoomTypeFacilityResponse
	2,  // 12: services.RoomTypeFacilityService.List:output_type -> services.RoomTypeFacilityResponse
	2,  // 13: services.RoomTypeFacilityService.Get:output_type -> services.RoomTypeFacilityResponse
	2,  // 14: services.RoomTypeFacilityService.Create:output_type -> services.RoomTypeFacilityResponse
	2,  // 15: services.RoomTypeFacilityService.Update:output_type -> services.RoomTypeFacilityResponse
	2,  // 16: services.RoomTypeFacilityService.Delete:output_type -> services.RoomTypeFacilityResponse
	11, // [11:17] is the sub-list for method output_type
	5,  // [5:11] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_roomTypeFacilityService_proto_init() }
func file_roomTypeFacilityService_proto_init() {
	if File_roomTypeFacilityService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_roomTypeFacilityService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomTypeFacility); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomTypeFacilityService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomTypeFacilityWhere); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomTypeFacilityService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomTypeFacilityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_roomTypeFacilityService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_roomTypeFacilityService_proto_goTypes,
		DependencyIndexes: file_roomTypeFacilityService_proto_depIdxs,
		MessageInfos:      file_roomTypeFacilityService_proto_msgTypes,
	}.Build()
	File_roomTypeFacilityService_proto = out.File
	file_roomTypeFacilityService_proto_rawDesc = nil
	file_roomTypeFacilityService_proto_goTypes = nil
	file_roomTypeFacilityService_proto_depIdxs = nil
}
