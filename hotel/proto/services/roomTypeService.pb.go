// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: roomTypeService.proto

package services

import (
	common "github.com/geiqin/microkit/protobuf/common"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RoomType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// @inject_tag: validate:"required" label:"房间名称"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" validate:"required" label:"房间名称"`
	// @inject_tag: validate:"required,numeric" label:"门市价"
	Price           float32 `protobuf:"fixed32,3,opt,name=price,proto3" json:"price" validate:"required,numeric" label:"门市价"`
	Deposit         float32 `protobuf:"fixed32,4,opt,name=deposit,proto3" json:"deposit"`
	IsOnlineDeposit bool    `protobuf:"varint,5,opt,name=is_online_deposit,json=isOnlineDeposit,proto3" json:"is_online_deposit"`
	Area            float32 `protobuf:"fixed32,6,opt,name=area,proto3" json:"area"`
	// @inject_tag: validate:"required,numeric" label:"可住人数"
	GuestNum        int32   `protobuf:"varint,7,opt,name=guest_num,json=guestNum,proto3" json:"guest_num" validate:"required,numeric" label:"可住人数"`
	IsNeedHousemate bool    `protobuf:"varint,8,opt,name=is_need_housemate,json=isNeedHousemate,proto3" json:"is_need_housemate"`
	ExtraBedType    int32   `protobuf:"varint,9,opt,name=extra_bed_type,json=extraBedType,proto3" json:"extra_bed_type"`
	ExtraBedPrice   float32 `protobuf:"fixed32,10,opt,name=extra_bed_price,json=extraBedPrice,proto3" json:"extra_bed_price"`
	ExtraBedName    string  `protobuf:"bytes,11,opt,name=extra_bed_name,json=extraBedName,proto3" json:"extra_bed_name"`
	// @inject_tag: validate:"required" label:"房型介绍"
	Detail               string `protobuf:"bytes,12,opt,name=detail,proto3" json:"detail" validate:"required" label:"房型介绍"`
	Sorting              int32  `protobuf:"varint,13,opt,name=sorting,proto3" json:"sorting"`
	SoldNum              int32  `protobuf:"varint,14,opt,name=sold_num,json=soldNum,proto3" json:"sold_num"`
	RoomNum              int32  `protobuf:"varint,15,opt,name=room_num,json=roomNum,proto3" json:"room_num"`
	RoomPricePlanNum     int32  `protobuf:"varint,25,opt,name=room_price_plan_num,json=roomPricePlanNum,proto3" json:"room_price_plan_num"`
	RoomPricePlanOpenNum int32  `protobuf:"varint,26,opt,name=room_price_plan_open_num,json=roomPricePlanOpenNum,proto3" json:"room_price_plan_open_num"`
	CreatedAt            string `protobuf:"bytes,16,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt            string `protobuf:"bytes,17,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	// @inject_tag: gorm:"foreignKey:RoomTypeId"
	Galleries []*RoomTypeGallery `protobuf:"bytes,18,rep,name=galleries,proto3" json:"galleries" gorm:"foreignKey:RoomTypeId"`
	// @inject_tag: gorm:"many2many:room_type_facility_relations;association_autoupdate:false"
	Facilities []*RoomTypeFacility `protobuf:"bytes,19,rep,name=facilities,proto3" json:"facilities" gorm:"many2many:room_type_facility_relations;association_autoupdate:false"`
	// @inject_tag: gorm:"many2many:room_type_tag_relations;association_autoupdate:false"
	Tags []*RoomTypeTag `protobuf:"bytes,20,rep,name=tags,proto3" json:"tags" gorm:"many2many:room_type_tag_relations;association_autoupdate:false"`
	// @inject_tag: gorm:"foreignKey:RoomTypeId"
	Rooms []*Room `protobuf:"bytes,21,rep,name=rooms,proto3" json:"rooms" gorm:"foreignKey:RoomTypeId"`
	// @inject_tag: gorm:"foreignKey:RoomTypeId"
	PricePlans []*RoomPricePlan `protobuf:"bytes,22,rep,name=price_plans,json=pricePlans,proto3" json:"price_plans" gorm:"foreignKey:RoomTypeId"`
	// @inject_tag: gorm:"-"
	RoomTypeFacilityIds []int32 `protobuf:"varint,23,rep,packed,name=room_type_facility_ids,json=roomTypeFacilityIds,proto3" json:"room_type_facility_ids" gorm:"-"`
	// @inject_tag: gorm:"-"
	RoomTypeTagIds []int32 `protobuf:"varint,24,rep,packed,name=room_type_tag_ids,json=roomTypeTagIds,proto3" json:"room_type_tag_ids" gorm:"-"`
}

func (x *RoomType) Reset() {
	*x = RoomType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomTypeService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomType) ProtoMessage() {}

func (x *RoomType) ProtoReflect() protoreflect.Message {
	mi := &file_roomTypeService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomType.ProtoReflect.Descriptor instead.
func (*RoomType) Descriptor() ([]byte, []int) {
	return file_roomTypeService_proto_rawDescGZIP(), []int{0}
}

func (x *RoomType) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoomType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoomType) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *RoomType) GetDeposit() float32 {
	if x != nil {
		return x.Deposit
	}
	return 0
}

func (x *RoomType) GetIsOnlineDeposit() bool {
	if x != nil {
		return x.IsOnlineDeposit
	}
	return false
}

func (x *RoomType) GetArea() float32 {
	if x != nil {
		return x.Area
	}
	return 0
}

func (x *RoomType) GetGuestNum() int32 {
	if x != nil {
		return x.GuestNum
	}
	return 0
}

func (x *RoomType) GetIsNeedHousemate() bool {
	if x != nil {
		return x.IsNeedHousemate
	}
	return false
}

func (x *RoomType) GetExtraBedType() int32 {
	if x != nil {
		return x.ExtraBedType
	}
	return 0
}

func (x *RoomType) GetExtraBedPrice() float32 {
	if x != nil {
		return x.ExtraBedPrice
	}
	return 0
}

func (x *RoomType) GetExtraBedName() string {
	if x != nil {
		return x.ExtraBedName
	}
	return ""
}

func (x *RoomType) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *RoomType) GetSorting() int32 {
	if x != nil {
		return x.Sorting
	}
	return 0
}

func (x *RoomType) GetSoldNum() int32 {
	if x != nil {
		return x.SoldNum
	}
	return 0
}

func (x *RoomType) GetRoomNum() int32 {
	if x != nil {
		return x.RoomNum
	}
	return 0
}

func (x *RoomType) GetRoomPricePlanNum() int32 {
	if x != nil {
		return x.RoomPricePlanNum
	}
	return 0
}

func (x *RoomType) GetRoomPricePlanOpenNum() int32 {
	if x != nil {
		return x.RoomPricePlanOpenNum
	}
	return 0
}

func (x *RoomType) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *RoomType) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *RoomType) GetGalleries() []*RoomTypeGallery {
	if x != nil {
		return x.Galleries
	}
	return nil
}

func (x *RoomType) GetFacilities() []*RoomTypeFacility {
	if x != nil {
		return x.Facilities
	}
	return nil
}

func (x *RoomType) GetTags() []*RoomTypeTag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *RoomType) GetRooms() []*Room {
	if x != nil {
		return x.Rooms
	}
	return nil
}

func (x *RoomType) GetPricePlans() []*RoomPricePlan {
	if x != nil {
		return x.PricePlans
	}
	return nil
}

func (x *RoomType) GetRoomTypeFacilityIds() []int32 {
	if x != nil {
		return x.RoomTypeFacilityIds
	}
	return nil
}

func (x *RoomType) GetRoomTypeTagIds() []int32 {
	if x != nil {
		return x.RoomTypeTagIds
	}
	return nil
}

type RoomTypeWhere struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged    int32  `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Top      int32  `protobuf:"varint,3,opt,name=top,proto3" json:"top"`
	Keywords string `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords"`
	Id       int64  `protobuf:"varint,5,opt,name=id,proto3" json:"id"`
	// @inject_tag: gorm:"-"
	Ids          []int64 `protobuf:"varint,6,rep,packed,name=ids,proto3" json:"ids" gorm:"-"`
	IsClient     bool    `protobuf:"varint,7,opt,name=is_client,json=isClient,proto3" json:"is_client"`
	Sorting      int32   `protobuf:"varint,8,opt,name=sorting,proto3" json:"sorting"`
	CheckinDate  string  `protobuf:"bytes,9,opt,name=checkin_date,json=checkinDate,proto3" json:"checkin_date"`     // 入住日期
	CheckoutDate string  `protobuf:"bytes,10,opt,name=checkout_date,json=checkoutDate,proto3" json:"checkout_date"` // 离店日期
}

func (x *RoomTypeWhere) Reset() {
	*x = RoomTypeWhere{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomTypeService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomTypeWhere) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomTypeWhere) ProtoMessage() {}

func (x *RoomTypeWhere) ProtoReflect() protoreflect.Message {
	mi := &file_roomTypeService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomTypeWhere.ProtoReflect.Descriptor instead.
func (*RoomTypeWhere) Descriptor() ([]byte, []int) {
	return file_roomTypeService_proto_rawDescGZIP(), []int{1}
}

func (x *RoomTypeWhere) GetPaged() int32 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *RoomTypeWhere) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *RoomTypeWhere) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *RoomTypeWhere) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *RoomTypeWhere) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoomTypeWhere) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *RoomTypeWhere) GetIsClient() bool {
	if x != nil {
		return x.IsClient
	}
	return false
}

func (x *RoomTypeWhere) GetSorting() int32 {
	if x != nil {
		return x.Sorting
	}
	return 0
}

func (x *RoomTypeWhere) GetCheckinDate() string {
	if x != nil {
		return x.CheckinDate
	}
	return ""
}

func (x *RoomTypeWhere) GetCheckoutDate() string {
	if x != nil {
		return x.CheckoutDate
	}
	return ""
}

type RoomTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error  *common.Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Info   *common.Info  `protobuf:"bytes,2,opt,name=info,proto3" json:"info"`
	Pager  *common.Pager `protobuf:"bytes,3,opt,name=pager,proto3" json:"pager"`
	Entity *RoomType     `protobuf:"bytes,4,opt,name=entity,proto3" json:"entity"`
	Items  []*RoomType   `protobuf:"bytes,5,rep,name=items,proto3" json:"items"`
}

func (x *RoomTypeResponse) Reset() {
	*x = RoomTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomTypeService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomTypeResponse) ProtoMessage() {}

func (x *RoomTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_roomTypeService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomTypeResponse.ProtoReflect.Descriptor instead.
func (*RoomTypeResponse) Descriptor() ([]byte, []int) {
	return file_roomTypeService_proto_rawDescGZIP(), []int{2}
}

func (x *RoomTypeResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RoomTypeResponse) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *RoomTypeResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *RoomTypeResponse) GetEntity() *RoomType {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *RoomTypeResponse) GetItems() []*RoomType {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_roomTypeService_proto protoreflect.FileDescriptor

var file_roomTypeService_proto_rawDesc = []byte{
	0x0a, 0x15, 0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x47, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1d, 0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x46, 0x61, 0x63, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x18, 0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x54, 0x61, 0x67, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x72, 0x6f, 0x6f,
	0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a,
	0x72, 0x6f, 0x6f, 0x6d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc8, 0x07, 0x0a, 0x08, 0x52,
	0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x69,
	0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x67,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x67, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x6e,
	0x65, 0x65, 0x64, 0x5f, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x6d, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x48, 0x6f, 0x75, 0x73, 0x65,
	0x6d, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x62, 0x65,
	0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x42, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x5f, 0x62, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x72, 0x61, 0x42, 0x65, 0x64, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x62, 0x65, 0x64, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x42, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6f,
	0x6c, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x6f,
	0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x75, 0x6d,
	0x12, 0x2d, 0x0a, 0x13, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x70,
	0x6c, 0x61, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x72,
	0x6f, 0x6f, 0x6d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x4e, 0x75, 0x6d, 0x12,
	0x36, 0x0a, 0x18, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x6c,
	0x61, 0x6e, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x1a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x14, 0x72, 0x6f, 0x6f, 0x6d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e,
	0x4f, 0x70, 0x65, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x47, 0x61, 0x6c, 0x6c,
	0x65, 0x72, 0x79, 0x52, 0x09, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x3a,
	0x0a, 0x0a, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x13, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f,
	0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0a,
	0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x54, 0x61, 0x67, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x15,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x38, 0x0a, 0x0b, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x50, 0x6c, 0x61, 0x6e, 0x73, 0x12, 0x33, 0x0a, 0x16, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x17, 0x20, 0x03, 0x28, 0x05, 0x52, 0x13, 0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x46,
	0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x73, 0x12, 0x29, 0x0a, 0x11, 0x72, 0x6f,
	0x6f, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x18, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0e, 0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x54,
	0x61, 0x67, 0x49, 0x64, 0x73, 0x22, 0x91, 0x02, 0x0a, 0x0d, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x57, 0x68, 0x65, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x6f, 0x70, 0x12, 0x1a, 0x0a, 0x08,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x6f, 0x75, 0x74, 0x44, 0x61, 0x74, 0x65, 0x22, 0xd4, 0x01, 0x0a, 0x10, 0x52, 0x6f,
	0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61,
	0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x06, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x32, 0x80, 0x04, 0x0a, 0x0f, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x17,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x57, 0x68, 0x65, 0x72, 0x65, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x57,
	0x68, 0x65, 0x72, 0x65, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3d, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x57, 0x68,
	0x65, 0x72, 0x65, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52,
	0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x35, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x38, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x1a,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x57, 0x68, 0x65, 0x72,
	0x65, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a,
	0x0d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x57, 0x68, 0x65, 0x72, 0x65, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x32, 0xc9, 0x01, 0x0a, 0x14, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x52, 0x6f, 0x6f,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x06,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x57, 0x68, 0x65, 0x72, 0x65, 0x1a,
	0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52,
	0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x57, 0x68, 0x65, 0x72, 0x65, 0x1a, 0x1a, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12,
	0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52,
	0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_roomTypeService_proto_rawDescOnce sync.Once
	file_roomTypeService_proto_rawDescData = file_roomTypeService_proto_rawDesc
)

func file_roomTypeService_proto_rawDescGZIP() []byte {
	file_roomTypeService_proto_rawDescOnce.Do(func() {
		file_roomTypeService_proto_rawDescData = protoimpl.X.CompressGZIP(file_roomTypeService_proto_rawDescData)
	})
	return file_roomTypeService_proto_rawDescData
}

var file_roomTypeService_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_roomTypeService_proto_goTypes = []interface{}{
	(*RoomType)(nil),         // 0: services.RoomType
	(*RoomTypeWhere)(nil),    // 1: services.RoomTypeWhere
	(*RoomTypeResponse)(nil), // 2: services.RoomTypeResponse
	(*RoomTypeGallery)(nil),  // 3: services.RoomTypeGallery
	(*RoomTypeFacility)(nil), // 4: services.RoomTypeFacility
	(*RoomTypeTag)(nil),      // 5: services.RoomTypeTag
	(*Room)(nil),             // 6: services.Room
	(*RoomPricePlan)(nil),    // 7: services.RoomPricePlan
	(*common.Error)(nil),     // 8: common.Error
	(*common.Info)(nil),      // 9: common.Info
	(*common.Pager)(nil),     // 10: common.Pager
}
var file_roomTypeService_proto_depIdxs = []int32{
	3,  // 0: services.RoomType.galleries:type_name -> services.RoomTypeGallery
	4,  // 1: services.RoomType.facilities:type_name -> services.RoomTypeFacility
	5,  // 2: services.RoomType.tags:type_name -> services.RoomTypeTag
	6,  // 3: services.RoomType.rooms:type_name -> services.Room
	7,  // 4: services.RoomType.price_plans:type_name -> services.RoomPricePlan
	8,  // 5: services.RoomTypeResponse.error:type_name -> common.Error
	9,  // 6: services.RoomTypeResponse.info:type_name -> common.Info
	10, // 7: services.RoomTypeResponse.pager:type_name -> common.Pager
	0,  // 8: services.RoomTypeResponse.entity:type_name -> services.RoomType
	0,  // 9: services.RoomTypeResponse.items:type_name -> services.RoomType
	1,  // 10: services.RoomTypeService.Search:input_type -> services.RoomTypeWhere
	1,  // 11: services.RoomTypeService.List:input_type -> services.RoomTypeWhere
	1,  // 12: services.RoomTypeService.Delete:input_type -> services.RoomTypeWhere
	0,  // 13: services.RoomTypeService.Get:input_type -> services.RoomType
	0,  // 14: services.RoomTypeService.Create:input_type -> services.RoomType
	0,  // 15: services.RoomTypeService.Update:input_type -> services.RoomType
	1,  // 16: services.RoomTypeService.ModifySort:input_type -> services.RoomTypeWhere
	1,  // 17: services.RoomTypeService.PricePlanList:input_type -> services.RoomTypeWhere
	1,  // 18: services.FrontRoomTypeService.Search:input_type -> services.RoomTypeWhere
	1,  // 19: services.FrontRoomTypeService.List:input_type -> services.RoomTypeWhere
	0,  // 20: services.FrontRoomTypeService.Get:input_type -> services.RoomType
	2,  // 21: services.RoomTypeService.Search:output_type -> services.RoomTypeResponse
	2,  // 22: services.RoomTypeService.List:output_type -> services.RoomTypeResponse
	2,  // 23: services.RoomTypeService.Delete:output_type -> services.RoomTypeResponse
	2,  // 24: services.RoomTypeService.Get:output_type -> services.RoomTypeResponse
	2,  // 25: services.RoomTypeService.Create:output_type -> services.RoomTypeResponse
	2,  // 26: services.RoomTypeService.Update:output_type -> services.RoomTypeResponse
	2,  // 27: services.RoomTypeService.ModifySort:output_type -> services.RoomTypeResponse
	2,  // 28: services.RoomTypeService.PricePlanList:output_type -> services.RoomTypeResponse
	2,  // 29: services.FrontRoomTypeService.Search:output_type -> services.RoomTypeResponse
	2,  // 30: services.FrontRoomTypeService.List:output_type -> services.RoomTypeResponse
	2,  // 31: services.FrontRoomTypeService.Get:output_type -> services.RoomTypeResponse
	21, // [21:32] is the sub-list for method output_type
	10, // [10:21] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_roomTypeService_proto_init() }
func file_roomTypeService_proto_init() {
	if File_roomTypeService_proto != nil {
		return
	}
	file_roomTypeGalleryService_proto_init()
	file_roomTypeFacilityService_proto_init()
	file_roomTypeTagService_proto_init()
	file_roomService_proto_init()
	file_roomPricePlanService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_roomTypeService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomTypeService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomTypeWhere); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomTypeService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_roomTypeService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_roomTypeService_proto_goTypes,
		DependencyIndexes: file_roomTypeService_proto_depIdxs,
		MessageInfos:      file_roomTypeService_proto_msgTypes,
	}.Build()
	File_roomTypeService_proto = out.File
	file_roomTypeService_proto_rawDesc = nil
	file_roomTypeService_proto_goTypes = nil
	file_roomTypeService_proto_depIdxs = nil
}
