// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: roomBookService.proto

package services

import (
	common "github.com/geiqin/microkit/protobuf/common"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RoomBookWhere struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged             int32   `protobuf:"varint,1,opt,name=paged,proto3" json:"paged,omitempty"`
	PageSize          int32   `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Id                int64   `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Ids               []int64 `protobuf:"varint,4,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Keywords          string  `protobuf:"bytes,5,opt,name=keywords,proto3" json:"keywords,omitempty"`
	StartDate         string  `protobuf:"bytes,6,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate           string  `protobuf:"bytes,7,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Status            int32   `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	RoomTypeId        int64   `protobuf:"varint,9,opt,name=room_type_id,json=roomTypeId,proto3" json:"room_type_id,omitempty"`
	RoomId            int64   `protobuf:"varint,10,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Type              string  `protobuf:"bytes,11,opt,name=type,proto3" json:"type,omitempty"`
	RoomBookDetailId  int64   `protobuf:"varint,12,opt,name=room_book_detail_id,json=roomBookDetailId,proto3" json:"room_book_detail_id,omitempty"`
	RoomBookDetailIds []int64 `protobuf:"varint,13,rep,packed,name=room_book_detail_ids,json=roomBookDetailIds,proto3" json:"room_book_detail_ids,omitempty"`
}

func (x *RoomBookWhere) Reset() {
	*x = RoomBookWhere{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomBookService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomBookWhere) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomBookWhere) ProtoMessage() {}

func (x *RoomBookWhere) ProtoReflect() protoreflect.Message {
	mi := &file_roomBookService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomBookWhere.ProtoReflect.Descriptor instead.
func (*RoomBookWhere) Descriptor() ([]byte, []int) {
	return file_roomBookService_proto_rawDescGZIP(), []int{0}
}

func (x *RoomBookWhere) GetPaged() int32 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *RoomBookWhere) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *RoomBookWhere) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoomBookWhere) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *RoomBookWhere) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *RoomBookWhere) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *RoomBookWhere) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *RoomBookWhere) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RoomBookWhere) GetRoomTypeId() int64 {
	if x != nil {
		return x.RoomTypeId
	}
	return 0
}

func (x *RoomBookWhere) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *RoomBookWhere) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *RoomBookWhere) GetRoomBookDetailId() int64 {
	if x != nil {
		return x.RoomBookDetailId
	}
	return 0
}

func (x *RoomBookWhere) GetRoomBookDetailIds() []int64 {
	if x != nil {
		return x.RoomBookDetailIds
	}
	return nil
}

type RoomBook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type       string `protobuf:"bytes,20,opt,name=type,proto3" json:"type,omitempty"`
	RoomBookSn string `protobuf:"bytes,2,opt,name=room_book_sn,json=roomBookSn,proto3" json:"room_book_sn,omitempty"`
	// @inject_tag: validate:"required" label:"客源信息"
	CustomerType   int32 `protobuf:"varint,3,opt,name=customer_type,json=customerType,proto3" json:"customer_type,omitempty" validate:"required" label:"客源信息"`
	PlatformSource int32 `protobuf:"varint,4,opt,name=platform_source,json=platformSource,proto3" json:"platform_source,omitempty"`
	CustomerId     int64 `protobuf:"varint,5,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	// @inject_tag: validate:"required" label:"预订姓名"
	BookName string `protobuf:"bytes,6,opt,name=book_name,json=bookName,proto3" json:"book_name,omitempty" validate:"required" label:"预订姓名"`
	// @inject_tag: validate:"required" label:"预订手机号"
	BookMobile      string `protobuf:"bytes,7,opt,name=book_mobile,json=bookMobile,proto3" json:"book_mobile,omitempty" validate:"required" label:"预订手机号"`
	ExternalOrderSn string `protobuf:"bytes,8,opt,name=external_order_sn,json=externalOrderSn,proto3" json:"external_order_sn,omitempty"`
	// @inject_tag: validate:"required" label:"入住时间"
	CheckinTime string `protobuf:"bytes,9,opt,name=checkin_time,json=checkinTime,proto3" json:"checkin_time,omitempty" validate:"required" label:"入住时间"`
	// @inject_tag: validate:"required" label:"离店时间"
	CheckoutTime string                         `protobuf:"bytes,10,opt,name=checkout_time,json=checkoutTime,proto3" json:"checkout_time,omitempty" validate:"required" label:"离店时间"`
	DayNum       int32                          `protobuf:"varint,11,opt,name=day_num,json=dayNum,proto3" json:"day_num,omitempty"`
	TotalPrice   float32                        `protobuf:"fixed32,12,opt,name=total_price,json=totalPrice,proto3" json:"total_price,omitempty"`
	Memo         string                         `protobuf:"bytes,13,opt,name=memo,proto3" json:"memo,omitempty"`
	Remark       string                         `protobuf:"bytes,14,opt,name=remark,proto3" json:"remark,omitempty"`
	Status       int32                          `protobuf:"varint,15,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt    string                         `protobuf:"bytes,16,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    string                         `protobuf:"bytes,17,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Details      []*RoomBookDetail              `protobuf:"bytes,18,rep,name=details,proto3" json:"details,omitempty"`
	DetailReq    []*AllRoomTypeAndAvailableRoom `protobuf:"bytes,19,rep,name=detail_req,json=detailReq,proto3" json:"detail_req,omitempty"`
}

func (x *RoomBook) Reset() {
	*x = RoomBook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomBookService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomBook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomBook) ProtoMessage() {}

func (x *RoomBook) ProtoReflect() protoreflect.Message {
	mi := &file_roomBookService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomBook.ProtoReflect.Descriptor instead.
func (*RoomBook) Descriptor() ([]byte, []int) {
	return file_roomBookService_proto_rawDescGZIP(), []int{1}
}

func (x *RoomBook) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoomBook) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *RoomBook) GetRoomBookSn() string {
	if x != nil {
		return x.RoomBookSn
	}
	return ""
}

func (x *RoomBook) GetCustomerType() int32 {
	if x != nil {
		return x.CustomerType
	}
	return 0
}

func (x *RoomBook) GetPlatformSource() int32 {
	if x != nil {
		return x.PlatformSource
	}
	return 0
}

func (x *RoomBook) GetCustomerId() int64 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

func (x *RoomBook) GetBookName() string {
	if x != nil {
		return x.BookName
	}
	return ""
}

func (x *RoomBook) GetBookMobile() string {
	if x != nil {
		return x.BookMobile
	}
	return ""
}

func (x *RoomBook) GetExternalOrderSn() string {
	if x != nil {
		return x.ExternalOrderSn
	}
	return ""
}

func (x *RoomBook) GetCheckinTime() string {
	if x != nil {
		return x.CheckinTime
	}
	return ""
}

func (x *RoomBook) GetCheckoutTime() string {
	if x != nil {
		return x.CheckoutTime
	}
	return ""
}

func (x *RoomBook) GetDayNum() int32 {
	if x != nil {
		return x.DayNum
	}
	return 0
}

func (x *RoomBook) GetTotalPrice() float32 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *RoomBook) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *RoomBook) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *RoomBook) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RoomBook) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *RoomBook) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *RoomBook) GetDetails() []*RoomBookDetail {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *RoomBook) GetDetailReq() []*AllRoomTypeAndAvailableRoom {
	if x != nil {
		return x.DetailReq
	}
	return nil
}

type RoomBookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error  *common.Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Info   *common.Info  `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	Pager  *common.Pager `protobuf:"bytes,3,opt,name=pager,proto3" json:"pager,omitempty"`
	Entity *RoomBook     `protobuf:"bytes,4,opt,name=entity,proto3" json:"entity,omitempty"`
	Items  []*RoomBook   `protobuf:"bytes,5,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *RoomBookResponse) Reset() {
	*x = RoomBookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomBookService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomBookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomBookResponse) ProtoMessage() {}

func (x *RoomBookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_roomBookService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomBookResponse.ProtoReflect.Descriptor instead.
func (*RoomBookResponse) Descriptor() ([]byte, []int) {
	return file_roomBookService_proto_rawDescGZIP(), []int{2}
}

func (x *RoomBookResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RoomBookResponse) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *RoomBookResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *RoomBookResponse) GetEntity() *RoomBook {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *RoomBookResponse) GetItems() []*RoomBook {
	if x != nil {
		return x.Items
	}
	return nil
}

type AllRoomTypeAndAvailableRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: validate:"required" label:"房型"
	RoomTypeId int64 `protobuf:"varint,1,opt,name=room_type_id,json=roomTypeId,proto3" json:"room_type_id,omitempty" validate:"required" label:"房型"`
	// @inject_tag: validate:"required" label:"房型名称"
	RoomTypeName string  `protobuf:"bytes,2,opt,name=room_type_name,json=roomTypeName,proto3" json:"room_type_name,omitempty" validate:"required" label:"房型名称"`
	CountableNum int32   `protobuf:"varint,3,opt,name=countable_num,json=countableNum,proto3" json:"countable_num,omitempty"` // 可订房间数
	Price        float32 `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`                                  // 门市价
	AvePrice     float32 `protobuf:"fixed32,5,opt,name=ave_price,json=avePrice,proto3" json:"ave_price,omitempty"`            // 房间均价
	// @inject_tag: validate:"required" label:"房间数量"
	RoomNum      int32            `protobuf:"varint,6,opt,name=room_num,json=roomNum,proto3" json:"room_num,omitempty" validate:"required" label:"房间数量"`                // 预定房间数量
	BreakfastNum int32            `protobuf:"varint,7,opt,name=breakfast_num,json=breakfastNum,proto3" json:"breakfast_num,omitempty"` // 早餐份数
	IsChecked    bool             `protobuf:"varint,8,opt,name=is_checked,json=isChecked,proto3" json:"is_checked,omitempty"`          // 是否已选择
	RoomList     []*BookRoomList  `protobuf:"bytes,9,rep,name=room_list,json=roomList,proto3" json:"room_list,omitempty"`
	PriceList    []*BookPriceList `protobuf:"bytes,10,rep,name=price_list,json=priceList,proto3" json:"price_list,omitempty"`
}

func (x *AllRoomTypeAndAvailableRoom) Reset() {
	*x = AllRoomTypeAndAvailableRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomBookService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllRoomTypeAndAvailableRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllRoomTypeAndAvailableRoom) ProtoMessage() {}

func (x *AllRoomTypeAndAvailableRoom) ProtoReflect() protoreflect.Message {
	mi := &file_roomBookService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllRoomTypeAndAvailableRoom.ProtoReflect.Descriptor instead.
func (*AllRoomTypeAndAvailableRoom) Descriptor() ([]byte, []int) {
	return file_roomBookService_proto_rawDescGZIP(), []int{3}
}

func (x *AllRoomTypeAndAvailableRoom) GetRoomTypeId() int64 {
	if x != nil {
		return x.RoomTypeId
	}
	return 0
}

func (x *AllRoomTypeAndAvailableRoom) GetRoomTypeName() string {
	if x != nil {
		return x.RoomTypeName
	}
	return ""
}

func (x *AllRoomTypeAndAvailableRoom) GetCountableNum() int32 {
	if x != nil {
		return x.CountableNum
	}
	return 0
}

func (x *AllRoomTypeAndAvailableRoom) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *AllRoomTypeAndAvailableRoom) GetAvePrice() float32 {
	if x != nil {
		return x.AvePrice
	}
	return 0
}

func (x *AllRoomTypeAndAvailableRoom) GetRoomNum() int32 {
	if x != nil {
		return x.RoomNum
	}
	return 0
}

func (x *AllRoomTypeAndAvailableRoom) GetBreakfastNum() int32 {
	if x != nil {
		return x.BreakfastNum
	}
	return 0
}

func (x *AllRoomTypeAndAvailableRoom) GetIsChecked() bool {
	if x != nil {
		return x.IsChecked
	}
	return false
}

func (x *AllRoomTypeAndAvailableRoom) GetRoomList() []*BookRoomList {
	if x != nil {
		return x.RoomList
	}
	return nil
}

func (x *AllRoomTypeAndAvailableRoom) GetPriceList() []*BookPriceList {
	if x != nil {
		return x.PriceList
	}
	return nil
}

type BookRoomList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId    int64  `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	RoomName  string `protobuf:"bytes,2,opt,name=room_name,json=roomName,proto3" json:"room_name,omitempty"`
	IsChecked bool   `protobuf:"varint,3,opt,name=is_checked,json=isChecked,proto3" json:"is_checked,omitempty"` // 是否已选择
}

func (x *BookRoomList) Reset() {
	*x = BookRoomList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomBookService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookRoomList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookRoomList) ProtoMessage() {}

func (x *BookRoomList) ProtoReflect() protoreflect.Message {
	mi := &file_roomBookService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookRoomList.ProtoReflect.Descriptor instead.
func (*BookRoomList) Descriptor() ([]byte, []int) {
	return file_roomBookService_proto_rawDescGZIP(), []int{4}
}

func (x *BookRoomList) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *BookRoomList) GetRoomName() string {
	if x != nil {
		return x.RoomName
	}
	return ""
}

func (x *BookRoomList) GetIsChecked() bool {
	if x != nil {
		return x.IsChecked
	}
	return false
}

type BookPriceList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date  string  `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Price float32 `protobuf:"fixed32,2,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *BookPriceList) Reset() {
	*x = BookPriceList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomBookService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookPriceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookPriceList) ProtoMessage() {}

func (x *BookPriceList) ProtoReflect() protoreflect.Message {
	mi := &file_roomBookService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookPriceList.ProtoReflect.Descriptor instead.
func (*BookPriceList) Descriptor() ([]byte, []int) {
	return file_roomBookService_proto_rawDescGZIP(), []int{5}
}

func (x *BookPriceList) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *BookPriceList) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type AllRoomTypeAndAvailableRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error  *common.Error                  `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Info   *common.Info                   `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	Pager  *common.Pager                  `protobuf:"bytes,3,opt,name=pager,proto3" json:"pager,omitempty"`
	Entity *AllRoomTypeAndAvailableRoom   `protobuf:"bytes,4,opt,name=entity,proto3" json:"entity,omitempty"`
	Items  []*AllRoomTypeAndAvailableRoom `protobuf:"bytes,5,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *AllRoomTypeAndAvailableRoomResponse) Reset() {
	*x = AllRoomTypeAndAvailableRoomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomBookService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllRoomTypeAndAvailableRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllRoomTypeAndAvailableRoomResponse) ProtoMessage() {}

func (x *AllRoomTypeAndAvailableRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_roomBookService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllRoomTypeAndAvailableRoomResponse.ProtoReflect.Descriptor instead.
func (*AllRoomTypeAndAvailableRoomResponse) Descriptor() ([]byte, []int) {
	return file_roomBookService_proto_rawDescGZIP(), []int{6}
}

func (x *AllRoomTypeAndAvailableRoomResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *AllRoomTypeAndAvailableRoomResponse) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *AllRoomTypeAndAvailableRoomResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *AllRoomTypeAndAvailableRoomResponse) GetEntity() *AllRoomTypeAndAvailableRoom {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *AllRoomTypeAndAvailableRoomResponse) GetItems() []*AllRoomTypeAndAvailableRoom {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_roomBookService_proto protoreflect.FileDescriptor

var file_roomBookService_proto_rawDesc = []byte{
	0x0a, 0x15, 0x72, 0x6f, 0x6f, 0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x72, 0x6f, 0x6f, 0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x11, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x81, 0x03, 0x0a, 0x0d, 0x52, 0x6f, 0x6f, 0x6d, 0x42, 0x6f, 0x6f,
	0x6b, 0x57, 0x68, 0x65, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x72, 0x6f, 0x6f,
	0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x13, 0x72, 0x6f, 0x6f, 0x6d,
	0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x72, 0x6f, 0x6f, 0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x14, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x0d, 0x20, 0x03, 0x28, 0x03, 0x52, 0x11, 0x72, 0x6f, 0x6f, 0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x73, 0x22, 0xa7, 0x05, 0x0a, 0x08, 0x52, 0x6f, 0x6f,
	0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x72, 0x6f, 0x6f,
	0x6d, 0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x73, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x53, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f,
	0x6f, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62,
	0x6f, 0x6f, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x6f, 0x6f, 0x6b, 0x5f,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x6f,
	0x6f, 0x6b, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x6f, 0x75, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x64, 0x61, 0x79, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x64,
	0x61, 0x79, 0x4e, 0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x44, 0x0a, 0x0a,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x6c, 0x6c, 0x52,
	0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x41, 0x6e, 0x64, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x09, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x22, 0xd4, 0x01, 0x0a, 0x10, 0x52, 0x6f, 0x6f, 0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x23,
	0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61,
	0x67, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52,
	0x6f, 0x6f, 0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x28, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x42, 0x6f,
	0x6f, 0x6b, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x89, 0x03, 0x0a, 0x1b, 0x41, 0x6c,
	0x6c, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x41, 0x6e, 0x64, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x20, 0x0a, 0x0c, 0x72, 0x6f, 0x6f,
	0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x72,
	0x6f, 0x6f, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x61, 0x76, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x08, 0x61, 0x76, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6f,
	0x6d, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x6f, 0x6f,
	0x6d, 0x4e, 0x75, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x66, 0x61, 0x73,
	0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x62, 0x72, 0x65,
	0x61, 0x6b, 0x66, 0x61, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x6f, 0x6f, 0x6d, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x36, 0x0a,
	0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x6f, 0x6f,
	0x6b, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x63, 0x0a, 0x0c, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x6f, 0x6f,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x22, 0x39, 0x0a, 0x0d, 0x42, 0x6f,
	0x6f, 0x6b, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x8d, 0x02, 0x0a, 0x23, 0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x6f,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x41, 0x6e, 0x64, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x20, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x06, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x41, 0x6e, 0x64, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x6d,
	0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x3b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x41, 0x6e,
	0x64, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x32, 0xf0, 0x02, 0x0a, 0x0f, 0x52, 0x6f, 0x6f, 0x6d, 0x42, 0x6f,
	0x6f, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52,
	0x6f, 0x6f, 0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x42, 0x6f, 0x6f,
	0x6b, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f,
	0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a,
	0x03, 0x47, 0x65, 0x74, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x52, 0x6f, 0x6f, 0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x57, 0x68, 0x65, 0x72, 0x65, 0x1a, 0x1a, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x42, 0x6f, 0x6f,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x1e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x41, 0x6e, 0x64, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x17, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x57,
	0x68, 0x65, 0x72, 0x65, 0x1a, 0x2d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x41, 0x6e, 0x64, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x57, 0x68, 0x65, 0x72, 0x65,
	0x1a, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_roomBookService_proto_rawDescOnce sync.Once
	file_roomBookService_proto_rawDescData = file_roomBookService_proto_rawDesc
)

func file_roomBookService_proto_rawDescGZIP() []byte {
	file_roomBookService_proto_rawDescOnce.Do(func() {
		file_roomBookService_proto_rawDescData = protoimpl.X.CompressGZIP(file_roomBookService_proto_rawDescData)
	})
	return file_roomBookService_proto_rawDescData
}

var file_roomBookService_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_roomBookService_proto_goTypes = []interface{}{
	(*RoomBookWhere)(nil),                       // 0: services.RoomBookWhere
	(*RoomBook)(nil),                            // 1: services.RoomBook
	(*RoomBookResponse)(nil),                    // 2: services.RoomBookResponse
	(*AllRoomTypeAndAvailableRoom)(nil),         // 3: services.AllRoomTypeAndAvailableRoom
	(*BookRoomList)(nil),                        // 4: services.BookRoomList
	(*BookPriceList)(nil),                       // 5: services.BookPriceList
	(*AllRoomTypeAndAvailableRoomResponse)(nil), // 6: services.AllRoomTypeAndAvailableRoomResponse
	(*RoomBookDetail)(nil),                      // 7: services.RoomBookDetail
	(*common.Error)(nil),                        // 8: common.Error
	(*common.Info)(nil),                         // 9: common.Info
	(*common.Pager)(nil),                        // 10: common.Pager
	(*RoomResponse)(nil),                        // 11: services.RoomResponse
}
var file_roomBookService_proto_depIdxs = []int32{
	7,  // 0: services.RoomBook.details:type_name -> services.RoomBookDetail
	3,  // 1: services.RoomBook.detail_req:type_name -> services.AllRoomTypeAndAvailableRoom
	8,  // 2: services.RoomBookResponse.error:type_name -> common.Error
	9,  // 3: services.RoomBookResponse.info:type_name -> common.Info
	10, // 4: services.RoomBookResponse.pager:type_name -> common.Pager
	1,  // 5: services.RoomBookResponse.entity:type_name -> services.RoomBook
	1,  // 6: services.RoomBookResponse.items:type_name -> services.RoomBook
	4,  // 7: services.AllRoomTypeAndAvailableRoom.room_list:type_name -> services.BookRoomList
	5,  // 8: services.AllRoomTypeAndAvailableRoom.price_list:type_name -> services.BookPriceList
	8,  // 9: services.AllRoomTypeAndAvailableRoomResponse.error:type_name -> common.Error
	9,  // 10: services.AllRoomTypeAndAvailableRoomResponse.info:type_name -> common.Info
	10, // 11: services.AllRoomTypeAndAvailableRoomResponse.pager:type_name -> common.Pager
	3,  // 12: services.AllRoomTypeAndAvailableRoomResponse.entity:type_name -> services.AllRoomTypeAndAvailableRoom
	3,  // 13: services.AllRoomTypeAndAvailableRoomResponse.items:type_name -> services.AllRoomTypeAndAvailableRoom
	1,  // 14: services.RoomBookService.Create:input_type -> services.RoomBook
	1,  // 15: services.RoomBookService.Update:input_type -> services.RoomBook
	0,  // 16: services.RoomBookService.Get:input_type -> services.RoomBookWhere
	0,  // 17: services.RoomBookService.GetAllRoomTypeAndAvailableRoom:input_type -> services.RoomBookWhere
	0,  // 18: services.RoomBookService.GetAvailableRoom:input_type -> services.RoomBookWhere
	2,  // 19: services.RoomBookService.Create:output_type -> services.RoomBookResponse
	2,  // 20: services.RoomBookService.Update:output_type -> services.RoomBookResponse
	2,  // 21: services.RoomBookService.Get:output_type -> services.RoomBookResponse
	6,  // 22: services.RoomBookService.GetAllRoomTypeAndAvailableRoom:output_type -> services.AllRoomTypeAndAvailableRoomResponse
	11, // 23: services.RoomBookService.GetAvailableRoom:output_type -> services.RoomResponse
	19, // [19:24] is the sub-list for method output_type
	14, // [14:19] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_roomBookService_proto_init() }
func file_roomBookService_proto_init() {
	if File_roomBookService_proto != nil {
		return
	}
	file_roomBookDetailService_proto_init()
	file_roomService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_roomBookService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomBookWhere); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomBookService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomBook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomBookService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomBookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomBookService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllRoomTypeAndAvailableRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomBookService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookRoomList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomBookService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookPriceList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomBookService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllRoomTypeAndAvailableRoomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_roomBookService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_roomBookService_proto_goTypes,
		DependencyIndexes: file_roomBookService_proto_depIdxs,
		MessageInfos:      file_roomBookService_proto_msgTypes,
	}.Build()
	File_roomBookService_proto = out.File
	file_roomBookService_proto_rawDesc = nil
	file_roomBookService_proto_goTypes = nil
	file_roomBookService_proto_depIdxs = nil
}
