syntax = "proto3";
package services;
option go_package = ".;services";
import "common/base.proto";

service CustomerChannelService {
    rpc Create (CustomerChannel) returns (CustomerChannelResponse);
    rpc Update (CustomerChannel) returns (CustomerChannelResponse);
    rpc Search (CustomerChannelWhere) returns (CustomerChannelResponse);
    rpc List (CustomerChannelWhere) returns (CustomerChannelResponse);
    rpc SetSorting (CustomerChannel) returns (CustomerChannelResponse);
    rpc SetStatus (CustomerChannel) returns (CustomerChannelResponse);
    rpc Delete (CustomerChannelWhere) returns (CustomerChannelResponse);
}

message CustomerChannelWhere {
  int32 paged = 1;
  int32 page_size = 2;
  int64 id = 3;
  // @inject_tag: gorm:"-"
  repeated int64 ids = 4;
  int32 status = 5;
  string keywords = 6;
  int32 type = 7;
}

message CustomerChannel {
  int64 id = 1;
  // @inject_tag: validate:"required" label:"客源类型"
  int32 type = 2;
  // @inject_tag: validate:"required" label:"公司名称"
  string company_name = 3;
  // @inject_tag: validate:"required" label:"公司简称"
  string company_short_name = 4;
  string legal_person = 5;
  string credit_code = 6;
  string taxpayer_num = 7;
  string company_phone = 8;
  string bank_name = 9;
  string start_time = 10;
  string end_time = 11;
  string contact_name = 12;
  string contact_phone = 13;
  string memo = 14;
  int32 sorting = 15;
  int32 status = 16;
  string created_at = 17;
  string updated_at = 18;
}

message CustomerChannelResponse {
  common.Error error = 1;
  common.Info info = 2;
  common.Pager pager = 3;
  CustomerChannel entity = 4;
  repeated CustomerChannel items = 5;
}