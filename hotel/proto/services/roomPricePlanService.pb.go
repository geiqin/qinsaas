// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: roomPricePlanService.proto

package services

import (
	common "github.com/geiqin/microkit/protobuf/common"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RoomPricePlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// @inject_tag: validate:"required" label:"房型"
	RoomTypeId int64 `protobuf:"varint,2,opt,name=room_type_id,json=roomTypeId,proto3" json:"room_type_id" validate:"required" label:"房型"`
	// @inject_tag: validate:"required" label:"名称"
	PlanName string `protobuf:"bytes,3,opt,name=plan_name,json=planName,proto3" json:"plan_name" validate:"required" label:"名称"`
	// @inject_tag: validate:"required" label:"标准价"
	Price    float32 `protobuf:"fixed32,4,opt,name=price,proto3" json:"price" validate:"required" label:"标准价"`
	MinPrice float32 `protobuf:"fixed32,5,opt,name=min_price,json=minPrice,proto3" json:"min_price"`
	MaxPrice float32 `protobuf:"fixed32,6,opt,name=max_price,json=maxPrice,proto3" json:"max_price"`
	// @inject_tag: validate:"required" label:"收款方式"
	PayType        int32 `protobuf:"varint,7,opt,name=pay_type,json=payType,proto3" json:"pay_type" validate:"required" label:"收款方式"`
	CanCouponCode  bool  `protobuf:"varint,8,opt,name=can_coupon_code,json=canCouponCode,proto3" json:"can_coupon_code"` // 是否可使用优惠券抵扣
	CanCashCode    bool  `protobuf:"varint,9,opt,name=can_cash_code,json=canCashCode,proto3" json:"can_cash_code"`       // 是否可使用现金券抵扣
	PriceType      int32 `protobuf:"varint,10,opt,name=price_type,json=priceType,proto3" json:"price_type"`
	BreakfastCount int32 `protobuf:"varint,11,opt,name=breakfast_count,json=breakfastCount,proto3" json:"breakfast_count"`
	// @inject_tag: validate:"required" label:"房量数量"
	CanSalesCount      int32  `protobuf:"varint,12,opt,name=can_sales_count,json=canSalesCount,proto3" json:"can_sales_count" validate:"required" label:"房量数量"`
	SalesCount         int32  `protobuf:"varint,13,opt,name=sales_count,json=salesCount,proto3" json:"sales_count"`
	SalesStrategyType  int32  `protobuf:"varint,14,opt,name=sales_strategy_type,json=salesStrategyType,proto3" json:"sales_strategy_type"`
	SalesStrategyValue int32  `protobuf:"varint,15,opt,name=sales_strategy_value,json=salesStrategyValue,proto3" json:"sales_strategy_value"`
	GiftContent        string `protobuf:"bytes,16,opt,name=gift_content,json=giftContent,proto3" json:"gift_content"`
	IsOpen             bool   `protobuf:"varint,17,opt,name=is_open,json=isOpen,proto3" json:"is_open"`
	Sorting            int32  `protobuf:"varint,18,opt,name=sorting,proto3" json:"sorting"`
	CreatedAt          string `protobuf:"bytes,19,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt          string `protobuf:"bytes,20,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
}

func (x *RoomPricePlan) Reset() {
	*x = RoomPricePlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomPricePlanService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomPricePlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomPricePlan) ProtoMessage() {}

func (x *RoomPricePlan) ProtoReflect() protoreflect.Message {
	mi := &file_roomPricePlanService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomPricePlan.ProtoReflect.Descriptor instead.
func (*RoomPricePlan) Descriptor() ([]byte, []int) {
	return file_roomPricePlanService_proto_rawDescGZIP(), []int{0}
}

func (x *RoomPricePlan) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoomPricePlan) GetRoomTypeId() int64 {
	if x != nil {
		return x.RoomTypeId
	}
	return 0
}

func (x *RoomPricePlan) GetPlanName() string {
	if x != nil {
		return x.PlanName
	}
	return ""
}

func (x *RoomPricePlan) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *RoomPricePlan) GetMinPrice() float32 {
	if x != nil {
		return x.MinPrice
	}
	return 0
}

func (x *RoomPricePlan) GetMaxPrice() float32 {
	if x != nil {
		return x.MaxPrice
	}
	return 0
}

func (x *RoomPricePlan) GetPayType() int32 {
	if x != nil {
		return x.PayType
	}
	return 0
}

func (x *RoomPricePlan) GetCanCouponCode() bool {
	if x != nil {
		return x.CanCouponCode
	}
	return false
}

func (x *RoomPricePlan) GetCanCashCode() bool {
	if x != nil {
		return x.CanCashCode
	}
	return false
}

func (x *RoomPricePlan) GetPriceType() int32 {
	if x != nil {
		return x.PriceType
	}
	return 0
}

func (x *RoomPricePlan) GetBreakfastCount() int32 {
	if x != nil {
		return x.BreakfastCount
	}
	return 0
}

func (x *RoomPricePlan) GetCanSalesCount() int32 {
	if x != nil {
		return x.CanSalesCount
	}
	return 0
}

func (x *RoomPricePlan) GetSalesCount() int32 {
	if x != nil {
		return x.SalesCount
	}
	return 0
}

func (x *RoomPricePlan) GetSalesStrategyType() int32 {
	if x != nil {
		return x.SalesStrategyType
	}
	return 0
}

func (x *RoomPricePlan) GetSalesStrategyValue() int32 {
	if x != nil {
		return x.SalesStrategyValue
	}
	return 0
}

func (x *RoomPricePlan) GetGiftContent() string {
	if x != nil {
		return x.GiftContent
	}
	return ""
}

func (x *RoomPricePlan) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

func (x *RoomPricePlan) GetSorting() int32 {
	if x != nil {
		return x.Sorting
	}
	return 0
}

func (x *RoomPricePlan) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *RoomPricePlan) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type RoomPricePlanWhere struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged      int32   `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize   int32   `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Top        int32   `protobuf:"varint,3,opt,name=top,proto3" json:"top"`
	Keywords   string  `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords"`
	Id         int64   `protobuf:"varint,5,opt,name=id,proto3" json:"id"`
	Ids        []int64 `protobuf:"varint,6,rep,packed,name=ids,proto3" json:"ids"`
	RoomTypeId int64   `protobuf:"varint,7,opt,name=room_type_id,json=roomTypeId,proto3" json:"room_type_id"`
	IsOpen     bool    `protobuf:"varint,8,opt,name=is_open,json=isOpen,proto3" json:"is_open"`
	Sorting    int32   `protobuf:"varint,9,opt,name=sorting,proto3" json:"sorting"`
}

func (x *RoomPricePlanWhere) Reset() {
	*x = RoomPricePlanWhere{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomPricePlanService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomPricePlanWhere) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomPricePlanWhere) ProtoMessage() {}

func (x *RoomPricePlanWhere) ProtoReflect() protoreflect.Message {
	mi := &file_roomPricePlanService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomPricePlanWhere.ProtoReflect.Descriptor instead.
func (*RoomPricePlanWhere) Descriptor() ([]byte, []int) {
	return file_roomPricePlanService_proto_rawDescGZIP(), []int{1}
}

func (x *RoomPricePlanWhere) GetPaged() int32 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *RoomPricePlanWhere) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *RoomPricePlanWhere) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *RoomPricePlanWhere) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *RoomPricePlanWhere) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoomPricePlanWhere) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *RoomPricePlanWhere) GetRoomTypeId() int64 {
	if x != nil {
		return x.RoomTypeId
	}
	return 0
}

func (x *RoomPricePlanWhere) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

func (x *RoomPricePlanWhere) GetSorting() int32 {
	if x != nil {
		return x.Sorting
	}
	return 0
}

type RoomPricePlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error  *common.Error    `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Info   *common.Info     `protobuf:"bytes,2,opt,name=info,proto3" json:"info"`
	Pager  *common.Pager    `protobuf:"bytes,3,opt,name=pager,proto3" json:"pager"`
	Entity *RoomPricePlan   `protobuf:"bytes,4,opt,name=entity,proto3" json:"entity"`
	Items  []*RoomPricePlan `protobuf:"bytes,5,rep,name=items,proto3" json:"items"`
}

func (x *RoomPricePlanResponse) Reset() {
	*x = RoomPricePlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomPricePlanService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomPricePlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomPricePlanResponse) ProtoMessage() {}

func (x *RoomPricePlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_roomPricePlanService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomPricePlanResponse.ProtoReflect.Descriptor instead.
func (*RoomPricePlanResponse) Descriptor() ([]byte, []int) {
	return file_roomPricePlanService_proto_rawDescGZIP(), []int{2}
}

func (x *RoomPricePlanResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RoomPricePlanResponse) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *RoomPricePlanResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *RoomPricePlanResponse) GetEntity() *RoomPricePlan {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *RoomPricePlanResponse) GetItems() []*RoomPricePlan {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_roomPricePlanService_proto protoreflect.FileDescriptor

var file_roomPricePlanService_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x72, 0x6f, 0x6f, 0x6d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9c, 0x05, 0x0a, 0x0d, 0x52, 0x6f,
	0x6f, 0x6d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x72,
	0x6f, 0x6f, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x08, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61,
	0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x61, 0x6e, 0x5f, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x63, 0x61, 0x6e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a,
	0x0d, 0x63, 0x61, 0x6e, 0x5f, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x63, 0x61, 0x6e, 0x43, 0x61, 0x73, 0x68, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x66, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x62, 0x72, 0x65, 0x61, 0x6b,
	0x66, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x61, 0x6e,
	0x5f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x11, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x12, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x69, 0x66, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6f, 0x70,
	0x65, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4f, 0x70, 0x65, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xec, 0x01, 0x0a, 0x12, 0x52, 0x6f, 0x6f,
	0x6d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x57, 0x68, 0x65, 0x72, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x74, 0x6f, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x22, 0xe3, 0x01, 0x0a, 0x15, 0x52, 0x6f, 0x6f, 0x6d,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x2f, 0x0a,
	0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2d,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x32, 0x8f, 0x04,
	0x0a, 0x14, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x6c,
	0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x1a, 0x1f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47,
	0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x6c, 0x61,
	0x6e, 0x57, 0x68, 0x65, 0x72, 0x65, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x17,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x6e,
	0x4f, 0x72, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e,
	0x57, 0x68, 0x65, 0x72, 0x65, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x47, 0x69, 0x66,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x6c, 0x61,
	0x6e, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f,
	0x6d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x53, 0x6f, 0x72, 0x74,
	0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x57, 0x68, 0x65, 0x72, 0x65, 0x1a, 0x1f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_roomPricePlanService_proto_rawDescOnce sync.Once
	file_roomPricePlanService_proto_rawDescData = file_roomPricePlanService_proto_rawDesc
)

func file_roomPricePlanService_proto_rawDescGZIP() []byte {
	file_roomPricePlanService_proto_rawDescOnce.Do(func() {
		file_roomPricePlanService_proto_rawDescData = protoimpl.X.CompressGZIP(file_roomPricePlanService_proto_rawDescData)
	})
	return file_roomPricePlanService_proto_rawDescData
}

var file_roomPricePlanService_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_roomPricePlanService_proto_goTypes = []interface{}{
	(*RoomPricePlan)(nil),         // 0: services.RoomPricePlan
	(*RoomPricePlanWhere)(nil),    // 1: services.RoomPricePlanWhere
	(*RoomPricePlanResponse)(nil), // 2: services.RoomPricePlanResponse
	(*common.Error)(nil),          // 3: common.Error
	(*common.Info)(nil),           // 4: common.Info
	(*common.Pager)(nil),          // 5: common.Pager
}
var file_roomPricePlanService_proto_depIdxs = []int32{
	3,  // 0: services.RoomPricePlanResponse.error:type_name -> common.Error
	4,  // 1: services.RoomPricePlanResponse.info:type_name -> common.Info
	5,  // 2: services.RoomPricePlanResponse.pager:type_name -> common.Pager
	0,  // 3: services.RoomPricePlanResponse.entity:type_name -> services.RoomPricePlan
	0,  // 4: services.RoomPricePlanResponse.items:type_name -> services.RoomPricePlan
	0,  // 5: services.RoomPricePlanService.Create:input_type -> services.RoomPricePlan
	0,  // 6: services.RoomPricePlanService.Update:input_type -> services.RoomPricePlan
	1,  // 7: services.RoomPricePlanService.Delete:input_type -> services.RoomPricePlanWhere
	0,  // 8: services.RoomPricePlanService.Get:input_type -> services.RoomPricePlan
	1,  // 9: services.RoomPricePlanService.OpenOrClose:input_type -> services.RoomPricePlanWhere
	0,  // 10: services.RoomPricePlanService.SetGiftContent:input_type -> services.RoomPricePlan
	1,  // 11: services.RoomPricePlanService.ModifySort:input_type -> services.RoomPricePlanWhere
	2,  // 12: services.RoomPricePlanService.Create:output_type -> services.RoomPricePlanResponse
	2,  // 13: services.RoomPricePlanService.Update:output_type -> services.RoomPricePlanResponse
	2,  // 14: services.RoomPricePlanService.Delete:output_type -> services.RoomPricePlanResponse
	2,  // 15: services.RoomPricePlanService.Get:output_type -> services.RoomPricePlanResponse
	2,  // 16: services.RoomPricePlanService.OpenOrClose:output_type -> services.RoomPricePlanResponse
	2,  // 17: services.RoomPricePlanService.SetGiftContent:output_type -> services.RoomPricePlanResponse
	2,  // 18: services.RoomPricePlanService.ModifySort:output_type -> services.RoomPricePlanResponse
	12, // [12:19] is the sub-list for method output_type
	5,  // [5:12] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_roomPricePlanService_proto_init() }
func file_roomPricePlanService_proto_init() {
	if File_roomPricePlanService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_roomPricePlanService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomPricePlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomPricePlanService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomPricePlanWhere); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomPricePlanService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomPricePlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_roomPricePlanService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_roomPricePlanService_proto_goTypes,
		DependencyIndexes: file_roomPricePlanService_proto_depIdxs,
		MessageInfos:      file_roomPricePlanService_proto_msgTypes,
	}.Build()
	File_roomPricePlanService_proto = out.File
	file_roomPricePlanService_proto_rawDesc = nil
	file_roomPricePlanService_proto_goTypes = nil
	file_roomPricePlanService_proto_depIdxs = nil
}
