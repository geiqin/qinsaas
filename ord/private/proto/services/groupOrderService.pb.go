// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: groupOrderService.proto

package services

import (
	common "github.com/geiqin/microkit/protobuf/common"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ToGroupWhere struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId     int64 `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id"`
	GroupTeamId int64 `protobuf:"varint,2,opt,name=group_team_id,json=groupTeamId,proto3" json:"group_team_id"`
}

func (x *ToGroupWhere) Reset() {
	*x = ToGroupWhere{}
	if protoimpl.UnsafeEnabled {
		mi := &file_groupOrderService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToGroupWhere) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToGroupWhere) ProtoMessage() {}

func (x *ToGroupWhere) ProtoReflect() protoreflect.Message {
	mi := &file_groupOrderService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToGroupWhere.ProtoReflect.Descriptor instead.
func (*ToGroupWhere) Descriptor() ([]byte, []int) {
	return file_groupOrderService_proto_rawDescGZIP(), []int{0}
}

func (x *ToGroupWhere) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *ToGroupWhere) GetGroupTeamId() int64 {
	if x != nil {
		return x.GroupTeamId
	}
	return 0
}

type ToGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *common.Error `protobuf:"bytes,4,opt,name=error,proto3" json:"error"`
	Info  *common.Info  `protobuf:"bytes,5,opt,name=info,proto3" json:"info"`
}

func (x *ToGroupResponse) Reset() {
	*x = ToGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_groupOrderService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToGroupResponse) ProtoMessage() {}

func (x *ToGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_groupOrderService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToGroupResponse.ProtoReflect.Descriptor instead.
func (*ToGroupResponse) Descriptor() ([]byte, []int) {
	return file_groupOrderService_proto_rawDescGZIP(), []int{1}
}

func (x *ToGroupResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ToGroupResponse) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_groupOrderService_proto protoreflect.FileDescriptor

var file_groupOrderService_proto_rawDesc = []byte{
	0x0a, 0x17, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x62, 0x75, 0x79, 0x69,
	0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x4d, 0x0a, 0x0c, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x57, 0x68, 0x65, 0x72, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x22, 0x58,
	0x0a, 0x0f, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x32, 0x93, 0x01, 0x0a, 0x13, 0x4d, 0x79, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x3e, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x17, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x42, 0x75, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3c, 0x0a, 0x06, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x58,
	0x0a, 0x11, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x41, 0x66, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x54,
	0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x57, 0x68, 0x65, 0x72, 0x65, 0x1a, 0x19, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_groupOrderService_proto_rawDescOnce sync.Once
	file_groupOrderService_proto_rawDescData = file_groupOrderService_proto_rawDesc
)

func file_groupOrderService_proto_rawDescGZIP() []byte {
	file_groupOrderService_proto_rawDescOnce.Do(func() {
		file_groupOrderService_proto_rawDescData = protoimpl.X.CompressGZIP(file_groupOrderService_proto_rawDescData)
	})
	return file_groupOrderService_proto_rawDescData
}

var file_groupOrderService_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_groupOrderService_proto_goTypes = []interface{}{
	(*ToGroupWhere)(nil),    // 0: services.ToGroupWhere
	(*ToGroupResponse)(nil), // 1: services.ToGroupResponse
	(*common.Error)(nil),    // 2: common.Error
	(*common.Info)(nil),     // 3: common.Info
	(*BuyingRequest)(nil),   // 4: services.BuyingRequest
	(*BuyingResponse)(nil),  // 5: services.BuyingResponse
	(*OrderResponse)(nil),   // 6: services.OrderResponse
}
var file_groupOrderService_proto_depIdxs = []int32{
	2, // 0: services.ToGroupResponse.error:type_name -> common.Error
	3, // 1: services.ToGroupResponse.info:type_name -> common.Info
	4, // 2: services.MyGroupOrderService.Confirm:input_type -> services.BuyingRequest
	4, // 3: services.MyGroupOrderService.Submit:input_type -> services.BuyingRequest
	0, // 4: services.GroupOrderService.AfterToGroup:input_type -> services.ToGroupWhere
	5, // 5: services.MyGroupOrderService.Confirm:output_type -> services.BuyingResponse
	6, // 6: services.MyGroupOrderService.Submit:output_type -> services.OrderResponse
	1, // 7: services.GroupOrderService.AfterToGroup:output_type -> services.ToGroupResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_groupOrderService_proto_init() }
func file_groupOrderService_proto_init() {
	if File_groupOrderService_proto != nil {
		return
	}
	file_orderService_proto_init()
	file_buyingService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_groupOrderService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToGroupWhere); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_groupOrderService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_groupOrderService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_groupOrderService_proto_goTypes,
		DependencyIndexes: file_groupOrderService_proto_depIdxs,
		MessageInfos:      file_groupOrderService_proto_msgTypes,
	}.Build()
	File_groupOrderService_proto = out.File
	file_groupOrderService_proto_rawDesc = nil
	file_groupOrderService_proto_goTypes = nil
	file_groupOrderService_proto_depIdxs = nil
}
