// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: wxappRoomService.proto

package services

import (
	fmt "fmt"
	_ "github.com/geiqin/microkit/protobuf/common"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "context"
	api "github.com/micro/go-micro/v2/api"
	client "github.com/micro/go-micro/v2/client"
	server "github.com/micro/go-micro/v2/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for FrontWxappRoomService service

func NewFrontWxappRoomServiceEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for FrontWxappRoomService service

type FrontWxappRoomService interface {
	Search(ctx context.Context, in *WxappRoomWhere, opts ...client.CallOption) (*WxappRoomResponse, error)
}

type frontWxappRoomService struct {
	c    client.Client
	name string
}

func NewFrontWxappRoomService(name string, c client.Client) FrontWxappRoomService {
	return &frontWxappRoomService{
		c:    c,
		name: name,
	}
}

func (c *frontWxappRoomService) Search(ctx context.Context, in *WxappRoomWhere, opts ...client.CallOption) (*WxappRoomResponse, error) {
	req := c.c.NewRequest(c.name, "FrontWxappRoomService.Search", in)
	out := new(WxappRoomResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for FrontWxappRoomService service

type FrontWxappRoomServiceHandler interface {
	Search(context.Context, *WxappRoomWhere, *WxappRoomResponse) error
}

func RegisterFrontWxappRoomServiceHandler(s server.Server, hdlr FrontWxappRoomServiceHandler, opts ...server.HandlerOption) error {
	type frontWxappRoomService interface {
		Search(ctx context.Context, in *WxappRoomWhere, out *WxappRoomResponse) error
	}
	type FrontWxappRoomService struct {
		frontWxappRoomService
	}
	h := &frontWxappRoomServiceHandler{hdlr}
	return s.Handle(s.NewHandler(&FrontWxappRoomService{h}, opts...))
}

type frontWxappRoomServiceHandler struct {
	FrontWxappRoomServiceHandler
}

func (h *frontWxappRoomServiceHandler) Search(ctx context.Context, in *WxappRoomWhere, out *WxappRoomResponse) error {
	return h.FrontWxappRoomServiceHandler.Search(ctx, in, out)
}

// Api Endpoints for WxappRoomService service

func NewWxappRoomServiceEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for WxappRoomService service

type WxappRoomService interface {
	Create(ctx context.Context, in *WxappRoom, opts ...client.CallOption) (*WxappRoomCreateOrUpdateResponse, error)
	Update(ctx context.Context, in *WxappRoom, opts ...client.CallOption) (*WxappRoomCreateOrUpdateResponse, error)
	Search(ctx context.Context, in *WxappRoomWhere, opts ...client.CallOption) (*WxappRoomResponse, error)
	Delete(ctx context.Context, in *WxappRoomWhere, opts ...client.CallOption) (*WxappRoomResponse, error)
	SearchLiveInfo(ctx context.Context, in *WxappRoomWhere, opts ...client.CallOption) (*WxappLiveReplayResponse, error)
	AddGoods(ctx context.Context, in *WxappRoomWhere, opts ...client.CallOption) (*WxappRoomResponse, error)
	GetPushUrl(ctx context.Context, in *WxappRoomWhere, opts ...client.CallOption) (*WxappRoomResponse, error)
	GetSharedCode(ctx context.Context, in *WxappRoomWhere, opts ...client.CallOption) (*WxappRoomResponse, error)
	UpdateFeedPublic(ctx context.Context, in *WxappRoomWhere, opts ...client.CallOption) (*WxappRoomResponse, error)
	UpdateReplay(ctx context.Context, in *WxappRoomWhere, opts ...client.CallOption) (*WxappRoomResponse, error)
	UpdateKf(ctx context.Context, in *WxappRoomWhere, opts ...client.CallOption) (*WxappRoomResponse, error)
	UpdateComment(ctx context.Context, in *WxappRoomWhere, opts ...client.CallOption) (*WxappRoomResponse, error)
}

type wxappRoomService struct {
	c    client.Client
	name string
}

func NewWxappRoomService(name string, c client.Client) WxappRoomService {
	return &wxappRoomService{
		c:    c,
		name: name,
	}
}

func (c *wxappRoomService) Create(ctx context.Context, in *WxappRoom, opts ...client.CallOption) (*WxappRoomCreateOrUpdateResponse, error) {
	req := c.c.NewRequest(c.name, "WxappRoomService.Create", in)
	out := new(WxappRoomCreateOrUpdateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wxappRoomService) Update(ctx context.Context, in *WxappRoom, opts ...client.CallOption) (*WxappRoomCreateOrUpdateResponse, error) {
	req := c.c.NewRequest(c.name, "WxappRoomService.Update", in)
	out := new(WxappRoomCreateOrUpdateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wxappRoomService) Search(ctx context.Context, in *WxappRoomWhere, opts ...client.CallOption) (*WxappRoomResponse, error) {
	req := c.c.NewRequest(c.name, "WxappRoomService.Search", in)
	out := new(WxappRoomResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wxappRoomService) Delete(ctx context.Context, in *WxappRoomWhere, opts ...client.CallOption) (*WxappRoomResponse, error) {
	req := c.c.NewRequest(c.name, "WxappRoomService.Delete", in)
	out := new(WxappRoomResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wxappRoomService) SearchLiveInfo(ctx context.Context, in *WxappRoomWhere, opts ...client.CallOption) (*WxappLiveReplayResponse, error) {
	req := c.c.NewRequest(c.name, "WxappRoomService.SearchLiveInfo", in)
	out := new(WxappLiveReplayResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wxappRoomService) AddGoods(ctx context.Context, in *WxappRoomWhere, opts ...client.CallOption) (*WxappRoomResponse, error) {
	req := c.c.NewRequest(c.name, "WxappRoomService.AddGoods", in)
	out := new(WxappRoomResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wxappRoomService) GetPushUrl(ctx context.Context, in *WxappRoomWhere, opts ...client.CallOption) (*WxappRoomResponse, error) {
	req := c.c.NewRequest(c.name, "WxappRoomService.GetPushUrl", in)
	out := new(WxappRoomResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wxappRoomService) GetSharedCode(ctx context.Context, in *WxappRoomWhere, opts ...client.CallOption) (*WxappRoomResponse, error) {
	req := c.c.NewRequest(c.name, "WxappRoomService.GetSharedCode", in)
	out := new(WxappRoomResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wxappRoomService) UpdateFeedPublic(ctx context.Context, in *WxappRoomWhere, opts ...client.CallOption) (*WxappRoomResponse, error) {
	req := c.c.NewRequest(c.name, "WxappRoomService.UpdateFeedPublic", in)
	out := new(WxappRoomResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wxappRoomService) UpdateReplay(ctx context.Context, in *WxappRoomWhere, opts ...client.CallOption) (*WxappRoomResponse, error) {
	req := c.c.NewRequest(c.name, "WxappRoomService.UpdateReplay", in)
	out := new(WxappRoomResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wxappRoomService) UpdateKf(ctx context.Context, in *WxappRoomWhere, opts ...client.CallOption) (*WxappRoomResponse, error) {
	req := c.c.NewRequest(c.name, "WxappRoomService.UpdateKf", in)
	out := new(WxappRoomResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wxappRoomService) UpdateComment(ctx context.Context, in *WxappRoomWhere, opts ...client.CallOption) (*WxappRoomResponse, error) {
	req := c.c.NewRequest(c.name, "WxappRoomService.UpdateComment", in)
	out := new(WxappRoomResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for WxappRoomService service

type WxappRoomServiceHandler interface {
	Create(context.Context, *WxappRoom, *WxappRoomCreateOrUpdateResponse) error
	Update(context.Context, *WxappRoom, *WxappRoomCreateOrUpdateResponse) error
	Search(context.Context, *WxappRoomWhere, *WxappRoomResponse) error
	Delete(context.Context, *WxappRoomWhere, *WxappRoomResponse) error
	SearchLiveInfo(context.Context, *WxappRoomWhere, *WxappLiveReplayResponse) error
	AddGoods(context.Context, *WxappRoomWhere, *WxappRoomResponse) error
	GetPushUrl(context.Context, *WxappRoomWhere, *WxappRoomResponse) error
	GetSharedCode(context.Context, *WxappRoomWhere, *WxappRoomResponse) error
	UpdateFeedPublic(context.Context, *WxappRoomWhere, *WxappRoomResponse) error
	UpdateReplay(context.Context, *WxappRoomWhere, *WxappRoomResponse) error
	UpdateKf(context.Context, *WxappRoomWhere, *WxappRoomResponse) error
	UpdateComment(context.Context, *WxappRoomWhere, *WxappRoomResponse) error
}

func RegisterWxappRoomServiceHandler(s server.Server, hdlr WxappRoomServiceHandler, opts ...server.HandlerOption) error {
	type wxappRoomService interface {
		Create(ctx context.Context, in *WxappRoom, out *WxappRoomCreateOrUpdateResponse) error
		Update(ctx context.Context, in *WxappRoom, out *WxappRoomCreateOrUpdateResponse) error
		Search(ctx context.Context, in *WxappRoomWhere, out *WxappRoomResponse) error
		Delete(ctx context.Context, in *WxappRoomWhere, out *WxappRoomResponse) error
		SearchLiveInfo(ctx context.Context, in *WxappRoomWhere, out *WxappLiveReplayResponse) error
		AddGoods(ctx context.Context, in *WxappRoomWhere, out *WxappRoomResponse) error
		GetPushUrl(ctx context.Context, in *WxappRoomWhere, out *WxappRoomResponse) error
		GetSharedCode(ctx context.Context, in *WxappRoomWhere, out *WxappRoomResponse) error
		UpdateFeedPublic(ctx context.Context, in *WxappRoomWhere, out *WxappRoomResponse) error
		UpdateReplay(ctx context.Context, in *WxappRoomWhere, out *WxappRoomResponse) error
		UpdateKf(ctx context.Context, in *WxappRoomWhere, out *WxappRoomResponse) error
		UpdateComment(ctx context.Context, in *WxappRoomWhere, out *WxappRoomResponse) error
	}
	type WxappRoomService struct {
		wxappRoomService
	}
	h := &wxappRoomServiceHandler{hdlr}
	return s.Handle(s.NewHandler(&WxappRoomService{h}, opts...))
}

type wxappRoomServiceHandler struct {
	WxappRoomServiceHandler
}

func (h *wxappRoomServiceHandler) Create(ctx context.Context, in *WxappRoom, out *WxappRoomCreateOrUpdateResponse) error {
	return h.WxappRoomServiceHandler.Create(ctx, in, out)
}

func (h *wxappRoomServiceHandler) Update(ctx context.Context, in *WxappRoom, out *WxappRoomCreateOrUpdateResponse) error {
	return h.WxappRoomServiceHandler.Update(ctx, in, out)
}

func (h *wxappRoomServiceHandler) Search(ctx context.Context, in *WxappRoomWhere, out *WxappRoomResponse) error {
	return h.WxappRoomServiceHandler.Search(ctx, in, out)
}

func (h *wxappRoomServiceHandler) Delete(ctx context.Context, in *WxappRoomWhere, out *WxappRoomResponse) error {
	return h.WxappRoomServiceHandler.Delete(ctx, in, out)
}

func (h *wxappRoomServiceHandler) SearchLiveInfo(ctx context.Context, in *WxappRoomWhere, out *WxappLiveReplayResponse) error {
	return h.WxappRoomServiceHandler.SearchLiveInfo(ctx, in, out)
}

func (h *wxappRoomServiceHandler) AddGoods(ctx context.Context, in *WxappRoomWhere, out *WxappRoomResponse) error {
	return h.WxappRoomServiceHandler.AddGoods(ctx, in, out)
}

func (h *wxappRoomServiceHandler) GetPushUrl(ctx context.Context, in *WxappRoomWhere, out *WxappRoomResponse) error {
	return h.WxappRoomServiceHandler.GetPushUrl(ctx, in, out)
}

func (h *wxappRoomServiceHandler) GetSharedCode(ctx context.Context, in *WxappRoomWhere, out *WxappRoomResponse) error {
	return h.WxappRoomServiceHandler.GetSharedCode(ctx, in, out)
}

func (h *wxappRoomServiceHandler) UpdateFeedPublic(ctx context.Context, in *WxappRoomWhere, out *WxappRoomResponse) error {
	return h.WxappRoomServiceHandler.UpdateFeedPublic(ctx, in, out)
}

func (h *wxappRoomServiceHandler) UpdateReplay(ctx context.Context, in *WxappRoomWhere, out *WxappRoomResponse) error {
	return h.WxappRoomServiceHandler.UpdateReplay(ctx, in, out)
}

func (h *wxappRoomServiceHandler) UpdateKf(ctx context.Context, in *WxappRoomWhere, out *WxappRoomResponse) error {
	return h.WxappRoomServiceHandler.UpdateKf(ctx, in, out)
}

func (h *wxappRoomServiceHandler) UpdateComment(ctx context.Context, in *WxappRoomWhere, out *WxappRoomResponse) error {
	return h.WxappRoomServiceHandler.UpdateComment(ctx, in, out)
}
