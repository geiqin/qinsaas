// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: wxappRoomAssistantService.proto

package services

import (
	fmt "fmt"
	_ "github.com/geiqin/microkit/protobuf/common"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "context"
	api "github.com/micro/go-micro/v2/api"
	client "github.com/micro/go-micro/v2/client"
	server "github.com/micro/go-micro/v2/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for WxappRoomAssistantService service

func NewWxappRoomAssistantServiceEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for WxappRoomAssistantService service

type WxappRoomAssistantService interface {
	Create(ctx context.Context, in *WxappRoomAssistantWhere, opts ...client.CallOption) (*WxappRoomAssistantResponse, error)
	Update(ctx context.Context, in *WxappRoomAssistantWhere, opts ...client.CallOption) (*WxappRoomAssistantResponse, error)
	Delete(ctx context.Context, in *WxappRoomAssistantWhere, opts ...client.CallOption) (*WxappRoomAssistantResponse, error)
	List(ctx context.Context, in *WxappRoomAssistantWhere, opts ...client.CallOption) (*WxappRoomAssistantListResponse, error)
}

type wxappRoomAssistantService struct {
	c    client.Client
	name string
}

func NewWxappRoomAssistantService(name string, c client.Client) WxappRoomAssistantService {
	return &wxappRoomAssistantService{
		c:    c,
		name: name,
	}
}

func (c *wxappRoomAssistantService) Create(ctx context.Context, in *WxappRoomAssistantWhere, opts ...client.CallOption) (*WxappRoomAssistantResponse, error) {
	req := c.c.NewRequest(c.name, "WxappRoomAssistantService.Create", in)
	out := new(WxappRoomAssistantResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wxappRoomAssistantService) Update(ctx context.Context, in *WxappRoomAssistantWhere, opts ...client.CallOption) (*WxappRoomAssistantResponse, error) {
	req := c.c.NewRequest(c.name, "WxappRoomAssistantService.Update", in)
	out := new(WxappRoomAssistantResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wxappRoomAssistantService) Delete(ctx context.Context, in *WxappRoomAssistantWhere, opts ...client.CallOption) (*WxappRoomAssistantResponse, error) {
	req := c.c.NewRequest(c.name, "WxappRoomAssistantService.Delete", in)
	out := new(WxappRoomAssistantResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wxappRoomAssistantService) List(ctx context.Context, in *WxappRoomAssistantWhere, opts ...client.CallOption) (*WxappRoomAssistantListResponse, error) {
	req := c.c.NewRequest(c.name, "WxappRoomAssistantService.List", in)
	out := new(WxappRoomAssistantListResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for WxappRoomAssistantService service

type WxappRoomAssistantServiceHandler interface {
	Create(context.Context, *WxappRoomAssistantWhere, *WxappRoomAssistantResponse) error
	Update(context.Context, *WxappRoomAssistantWhere, *WxappRoomAssistantResponse) error
	Delete(context.Context, *WxappRoomAssistantWhere, *WxappRoomAssistantResponse) error
	List(context.Context, *WxappRoomAssistantWhere, *WxappRoomAssistantListResponse) error
}

func RegisterWxappRoomAssistantServiceHandler(s server.Server, hdlr WxappRoomAssistantServiceHandler, opts ...server.HandlerOption) error {
	type wxappRoomAssistantService interface {
		Create(ctx context.Context, in *WxappRoomAssistantWhere, out *WxappRoomAssistantResponse) error
		Update(ctx context.Context, in *WxappRoomAssistantWhere, out *WxappRoomAssistantResponse) error
		Delete(ctx context.Context, in *WxappRoomAssistantWhere, out *WxappRoomAssistantResponse) error
		List(ctx context.Context, in *WxappRoomAssistantWhere, out *WxappRoomAssistantListResponse) error
	}
	type WxappRoomAssistantService struct {
		wxappRoomAssistantService
	}
	h := &wxappRoomAssistantServiceHandler{hdlr}
	return s.Handle(s.NewHandler(&WxappRoomAssistantService{h}, opts...))
}

type wxappRoomAssistantServiceHandler struct {
	WxappRoomAssistantServiceHandler
}

func (h *wxappRoomAssistantServiceHandler) Create(ctx context.Context, in *WxappRoomAssistantWhere, out *WxappRoomAssistantResponse) error {
	return h.WxappRoomAssistantServiceHandler.Create(ctx, in, out)
}

func (h *wxappRoomAssistantServiceHandler) Update(ctx context.Context, in *WxappRoomAssistantWhere, out *WxappRoomAssistantResponse) error {
	return h.WxappRoomAssistantServiceHandler.Update(ctx, in, out)
}

func (h *wxappRoomAssistantServiceHandler) Delete(ctx context.Context, in *WxappRoomAssistantWhere, out *WxappRoomAssistantResponse) error {
	return h.WxappRoomAssistantServiceHandler.Delete(ctx, in, out)
}

func (h *wxappRoomAssistantServiceHandler) List(ctx context.Context, in *WxappRoomAssistantWhere, out *WxappRoomAssistantListResponse) error {
	return h.WxappRoomAssistantServiceHandler.List(ctx, in, out)
}
