// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: wxappRoomService.proto

package services

import (
	common "github.com/geiqin/microkit/protobuf/common"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type WxappRoomWhere struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged    int32   `protobuf:"varint,1,opt,name=paged,proto3" json:"paged,omitempty"`
	PageSize int32   `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Sorting  string  `protobuf:"bytes,3,opt,name=sorting,proto3" json:"sorting,omitempty"`
	RoomId   int64   `protobuf:"varint,4,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	RoomIds  []int64 `protobuf:"varint,5,rep,packed,name=room_ids,json=roomIds,proto3" json:"room_ids,omitempty"`
	GoodsId  int64   `protobuf:"varint,6,opt,name=goods_id,json=goodsId,proto3" json:"goods_id,omitempty"`
	GoodsIds []int64 `protobuf:"varint,7,rep,packed,name=goods_ids,json=goodsIds,proto3" json:"goods_ids,omitempty"`
	Params   string  `protobuf:"bytes,8,opt,name=params,proto3" json:"params,omitempty"`
	IsOpen   bool    `protobuf:"varint,9,opt,name=is_open,json=isOpen,proto3" json:"is_open,omitempty"`
}

func (x *WxappRoomWhere) Reset() {
	*x = WxappRoomWhere{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wxappRoomService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WxappRoomWhere) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WxappRoomWhere) ProtoMessage() {}

func (x *WxappRoomWhere) ProtoReflect() protoreflect.Message {
	mi := &file_wxappRoomService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WxappRoomWhere.ProtoReflect.Descriptor instead.
func (*WxappRoomWhere) Descriptor() ([]byte, []int) {
	return file_wxappRoomService_proto_rawDescGZIP(), []int{0}
}

func (x *WxappRoomWhere) GetPaged() int32 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *WxappRoomWhere) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *WxappRoomWhere) GetSorting() string {
	if x != nil {
		return x.Sorting
	}
	return ""
}

func (x *WxappRoomWhere) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *WxappRoomWhere) GetRoomIds() []int64 {
	if x != nil {
		return x.RoomIds
	}
	return nil
}

func (x *WxappRoomWhere) GetGoodsId() int64 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *WxappRoomWhere) GetGoodsIds() []int64 {
	if x != nil {
		return x.GoodsIds
	}
	return nil
}

func (x *WxappRoomWhere) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *WxappRoomWhere) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

type WxappRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId          int64                    `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Name            string                   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // 房间名字
	CoverImg        string                   `protobuf:"bytes,3,opt,name=cover_img,json=coverImg,proto3" json:"cover_img,omitempty"`
	StartTime       string                   `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                     // 开始时间
	EndTime         string                   `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                           // 结束时间
	AnchorName      string                   `protobuf:"bytes,6,opt,name=anchor_name,json=anchorName,proto3" json:"anchor_name,omitempty"`                  // 主播昵称
	AnchorWechat    string                   `protobuf:"bytes,7,opt,name=anchor_wechat,json=anchorWechat,proto3" json:"anchor_wechat,omitempty"`            // 主播微信号
	SubAnchorWechat string                   `protobuf:"bytes,8,opt,name=sub_anchor_wechat,json=subAnchorWechat,proto3" json:"sub_anchor_wechat,omitempty"` // 主播副号微信号
	CreaterWechat   string                   `protobuf:"bytes,9,opt,name=creater_wechat,json=createrWechat,proto3" json:"creater_wechat,omitempty"`         // 创建者微信号
	ShareImg        string                   `protobuf:"bytes,10,opt,name=share_img,json=shareImg,proto3" json:"share_img,omitempty"`
	FeedsImg        string                   `protobuf:"bytes,11,opt,name=feeds_img,json=feedsImg,proto3" json:"feeds_img,omitempty"`
	IsFeedsPublic   int32                    `protobuf:"varint,12,opt,name=is_feeds_public,json=isFeedsPublic,proto3" json:"is_feeds_public,omitempty"` // 是否开启官方收录，1 开启，0 关闭
	Type            int32                    `protobuf:"varint,13,opt,name=type,proto3" json:"type,omitempty"`                                          // 直播类型，1 推流 0 手机直播
	ScreenType      int32                    `protobuf:"varint,14,opt,name=screen_type,json=screenType,proto3" json:"screen_type,omitempty"`            // 1：横屏 0：竖屏
	CloseLike       int32                    `protobuf:"varint,15,opt,name=close_like,json=closeLike,proto3" json:"close_like,omitempty"`               // 是否关闭点赞 1：关闭
	CloseGoods      int32                    `protobuf:"varint,16,opt,name=close_goods,json=closeGoods,proto3" json:"close_goods,omitempty"`            // 是否关闭商品货架，1：关闭
	CloseComment    int32                    `protobuf:"varint,17,opt,name=close_comment,json=closeComment,proto3" json:"close_comment,omitempty"`      // 是否开启评论，1：关闭
	CloseReplay     int32                    `protobuf:"varint,18,opt,name=close_replay,json=closeReplay,proto3" json:"close_replay,omitempty"`         // 是否关闭回放 1 关闭
	CloseShare      int32                    `protobuf:"varint,19,opt,name=close_share,json=closeShare,proto3" json:"close_share,omitempty"`            //  是否关闭分享 1 关闭
	CloseKf         int32                    `protobuf:"varint,20,opt,name=close_kf,json=closeKf,proto3" json:"close_kf,omitempty"`                     // 是否关闭客服，1 关闭
	LiveStatus      int32                    `protobuf:"varint,21,opt,name=live_status,json=liveStatus,proto3" json:"live_status,omitempty"`
	CoverImgId      string                   `protobuf:"bytes,22,opt,name=cover_img_id,json=coverImgId,proto3" json:"cover_img_id,omitempty"` // 背景图ID 通过 uploadfile 上传，填写 mediaID
	ShareImgId      string                   `protobuf:"bytes,23,opt,name=share_img_id,json=shareImgId,proto3" json:"share_img_id,omitempty"` // 分享图ID 通过 uploadfile 上传，填写 mediaID
	FeedsImgId      string                   `protobuf:"bytes,24,opt,name=feeds_img_id,json=feedsImgId,proto3" json:"feeds_img_id,omitempty"` // 购物直播频道封面图ID 通过 uploadfile 上传，填写 mediaID
	Goods           []*WxappRoomGoodsCommon2 `protobuf:"bytes,25,rep,name=goods,proto3" json:"goods,omitempty"`
}

func (x *WxappRoom) Reset() {
	*x = WxappRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wxappRoomService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WxappRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WxappRoom) ProtoMessage() {}

func (x *WxappRoom) ProtoReflect() protoreflect.Message {
	mi := &file_wxappRoomService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WxappRoom.ProtoReflect.Descriptor instead.
func (*WxappRoom) Descriptor() ([]byte, []int) {
	return file_wxappRoomService_proto_rawDescGZIP(), []int{1}
}

func (x *WxappRoom) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *WxappRoom) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WxappRoom) GetCoverImg() string {
	if x != nil {
		return x.CoverImg
	}
	return ""
}

func (x *WxappRoom) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *WxappRoom) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *WxappRoom) GetAnchorName() string {
	if x != nil {
		return x.AnchorName
	}
	return ""
}

func (x *WxappRoom) GetAnchorWechat() string {
	if x != nil {
		return x.AnchorWechat
	}
	return ""
}

func (x *WxappRoom) GetSubAnchorWechat() string {
	if x != nil {
		return x.SubAnchorWechat
	}
	return ""
}

func (x *WxappRoom) GetCreaterWechat() string {
	if x != nil {
		return x.CreaterWechat
	}
	return ""
}

func (x *WxappRoom) GetShareImg() string {
	if x != nil {
		return x.ShareImg
	}
	return ""
}

func (x *WxappRoom) GetFeedsImg() string {
	if x != nil {
		return x.FeedsImg
	}
	return ""
}

func (x *WxappRoom) GetIsFeedsPublic() int32 {
	if x != nil {
		return x.IsFeedsPublic
	}
	return 0
}

func (x *WxappRoom) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *WxappRoom) GetScreenType() int32 {
	if x != nil {
		return x.ScreenType
	}
	return 0
}

func (x *WxappRoom) GetCloseLike() int32 {
	if x != nil {
		return x.CloseLike
	}
	return 0
}

func (x *WxappRoom) GetCloseGoods() int32 {
	if x != nil {
		return x.CloseGoods
	}
	return 0
}

func (x *WxappRoom) GetCloseComment() int32 {
	if x != nil {
		return x.CloseComment
	}
	return 0
}

func (x *WxappRoom) GetCloseReplay() int32 {
	if x != nil {
		return x.CloseReplay
	}
	return 0
}

func (x *WxappRoom) GetCloseShare() int32 {
	if x != nil {
		return x.CloseShare
	}
	return 0
}

func (x *WxappRoom) GetCloseKf() int32 {
	if x != nil {
		return x.CloseKf
	}
	return 0
}

func (x *WxappRoom) GetLiveStatus() int32 {
	if x != nil {
		return x.LiveStatus
	}
	return 0
}

func (x *WxappRoom) GetCoverImgId() string {
	if x != nil {
		return x.CoverImgId
	}
	return ""
}

func (x *WxappRoom) GetShareImgId() string {
	if x != nil {
		return x.ShareImgId
	}
	return ""
}

func (x *WxappRoom) GetFeedsImgId() string {
	if x != nil {
		return x.FeedsImgId
	}
	return ""
}

func (x *WxappRoom) GetGoods() []*WxappRoomGoodsCommon2 {
	if x != nil {
		return x.Goods
	}
	return nil
}

type WxappRoomCreateOrUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId    int64  `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	QrcodeUrl string `protobuf:"bytes,2,opt,name=qrcode_url,json=qrcodeUrl,proto3" json:"qrcode_url,omitempty"` // 当主播微信号没有在 “小程序直播“ 小程序实名认证 返回该字段
	ErrCode   int32  `protobuf:"varint,3,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	ErrMsg    string `protobuf:"bytes,4,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
}

func (x *WxappRoomCreateOrUpdate) Reset() {
	*x = WxappRoomCreateOrUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wxappRoomService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WxappRoomCreateOrUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WxappRoomCreateOrUpdate) ProtoMessage() {}

func (x *WxappRoomCreateOrUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_wxappRoomService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WxappRoomCreateOrUpdate.ProtoReflect.Descriptor instead.
func (*WxappRoomCreateOrUpdate) Descriptor() ([]byte, []int) {
	return file_wxappRoomService_proto_rawDescGZIP(), []int{2}
}

func (x *WxappRoomCreateOrUpdate) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *WxappRoomCreateOrUpdate) GetQrcodeUrl() string {
	if x != nil {
		return x.QrcodeUrl
	}
	return ""
}

func (x *WxappRoomCreateOrUpdate) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *WxappRoomCreateOrUpdate) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

// 直播间回放
type WxappLiveReplay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpireTime string `protobuf:"bytes,1,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	CreateTime string `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	MediaUrl   string `protobuf:"bytes,3,opt,name=media_url,json=mediaUrl,proto3" json:"media_url,omitempty"`
}

func (x *WxappLiveReplay) Reset() {
	*x = WxappLiveReplay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wxappRoomService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WxappLiveReplay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WxappLiveReplay) ProtoMessage() {}

func (x *WxappLiveReplay) ProtoReflect() protoreflect.Message {
	mi := &file_wxappRoomService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WxappLiveReplay.ProtoReflect.Descriptor instead.
func (*WxappLiveReplay) Descriptor() ([]byte, []int) {
	return file_wxappRoomService_proto_rawDescGZIP(), []int{3}
}

func (x *WxappLiveReplay) GetExpireTime() string {
	if x != nil {
		return x.ExpireTime
	}
	return ""
}

func (x *WxappLiveReplay) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *WxappLiveReplay) GetMediaUrl() string {
	if x != nil {
		return x.MediaUrl
	}
	return ""
}

type WxappRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *WxappRoom    `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Pager  *common.Pager `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Items  []*WxappRoom  `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Error  *common.Error `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Info   *common.Info  `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *WxappRoomResponse) Reset() {
	*x = WxappRoomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wxappRoomService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WxappRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WxappRoomResponse) ProtoMessage() {}

func (x *WxappRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wxappRoomService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WxappRoomResponse.ProtoReflect.Descriptor instead.
func (*WxappRoomResponse) Descriptor() ([]byte, []int) {
	return file_wxappRoomService_proto_rawDescGZIP(), []int{4}
}

func (x *WxappRoomResponse) GetEntity() *WxappRoom {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *WxappRoomResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *WxappRoomResponse) GetItems() []*WxappRoom {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *WxappRoomResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *WxappRoomResponse) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

type WxappRoomCreateOrUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *WxappRoomCreateOrUpdate `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Error  *common.Error            `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Info   *common.Info             `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *WxappRoomCreateOrUpdateResponse) Reset() {
	*x = WxappRoomCreateOrUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wxappRoomService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WxappRoomCreateOrUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WxappRoomCreateOrUpdateResponse) ProtoMessage() {}

func (x *WxappRoomCreateOrUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wxappRoomService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WxappRoomCreateOrUpdateResponse.ProtoReflect.Descriptor instead.
func (*WxappRoomCreateOrUpdateResponse) Descriptor() ([]byte, []int) {
	return file_wxappRoomService_proto_rawDescGZIP(), []int{5}
}

func (x *WxappRoomCreateOrUpdateResponse) GetEntity() *WxappRoomCreateOrUpdate {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *WxappRoomCreateOrUpdateResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *WxappRoomCreateOrUpdateResponse) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

type WxappLiveReplayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *WxappLiveReplay   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Pager  *common.Pager      `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Items  []*WxappLiveReplay `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Error  *common.Error      `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Info   *common.Info       `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *WxappLiveReplayResponse) Reset() {
	*x = WxappLiveReplayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wxappRoomService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WxappLiveReplayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WxappLiveReplayResponse) ProtoMessage() {}

func (x *WxappLiveReplayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wxappRoomService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WxappLiveReplayResponse.ProtoReflect.Descriptor instead.
func (*WxappLiveReplayResponse) Descriptor() ([]byte, []int) {
	return file_wxappRoomService_proto_rawDescGZIP(), []int{6}
}

func (x *WxappLiveReplayResponse) GetEntity() *WxappLiveReplay {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *WxappLiveReplayResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *WxappLiveReplayResponse) GetItems() []*WxappLiveReplay {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *WxappLiveReplayResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *WxappLiveReplayResponse) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_wxappRoomService_proto protoreflect.FileDescriptor

var file_wxappRoomService_proto_rawDesc = []byte{
	0x0a, 0x16, 0x77, 0x78, 0x61, 0x70, 0x70, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x77, 0x78, 0x61, 0x70, 0x70, 0x52, 0x6f, 0x6f, 0x6d,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xfa, 0x01, 0x0a, 0x0e, 0x57, 0x78, 0x61, 0x70, 0x70, 0x52, 0x6f, 0x6f, 0x6d,
	0x57, 0x68, 0x65, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72,
	0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x72,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x22,
	0xc1, 0x06, 0x0a, 0x09, 0x57, 0x78, 0x61, 0x70, 0x70, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x17, 0x0a,
	0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x5f, 0x77, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6e, 0x63, 0x68, 0x6f,
	0x72, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x5f, 0x61,
	0x6e, 0x63, 0x68, 0x6f, 0x72, 0x5f, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x57, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x77,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x72, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x5f, 0x69, 0x6d, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x49, 0x6d, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x65, 0x65, 0x64, 0x73,
	0x5f, 0x69, 0x6d, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x65, 0x65, 0x64,
	0x73, 0x49, 0x6d, 0x67, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x73,
	0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x69,
	0x73, 0x46, 0x65, 0x65, 0x64, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x4c, 0x69, 0x6b, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f,
	0x72, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x5f, 0x6b, 0x66, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x4b, 0x66, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x69, 0x76, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f,
	0x69, 0x6d, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x49, 0x6d, 0x67, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x5f, 0x69, 0x6d, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x49, 0x6d, 0x67, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x65,
	0x65, 0x64, 0x73, 0x5f, 0x69, 0x6d, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x66, 0x65, 0x65, 0x64, 0x73, 0x49, 0x6d, 0x67, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x05,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x19, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x78, 0x61, 0x70, 0x70, 0x52, 0x6f, 0x6f, 0x6d,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x32, 0x52, 0x05, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x17, 0x57, 0x78, 0x61, 0x70, 0x70, 0x52, 0x6f, 0x6f,
	0x6d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x72, 0x63, 0x6f,
	0x64, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x72,
	0x63, 0x6f, 0x64, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x70, 0x0a, 0x0f, 0x57,
	0x78, 0x61, 0x70, 0x70, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x1f,
	0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x72, 0x6c, 0x22, 0xd7, 0x01,
	0x0a, 0x11, 0x57, 0x78, 0x61, 0x70, 0x70, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57,
	0x78, 0x61, 0x70, 0x70, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x57, 0x78, 0x61, 0x70, 0x70, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xa3, 0x01, 0x0a, 0x1f, 0x57, 0x78, 0x61, 0x70,
	0x70, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x78, 0x61, 0x70, 0x70, 0x52, 0x6f, 0x6f, 0x6d,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x06,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xe9, 0x01,
	0x0a, 0x17, 0x57, 0x78, 0x61, 0x70, 0x70, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x61,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x78, 0x61, 0x70, 0x70, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x61, 0x79, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x72, 0x12, 0x2f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x78, 0x61, 0x70,
	0x70, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x32, 0x5a, 0x0a, 0x15, 0x46, 0x72, 0x6f,
	0x6e, 0x74, 0x57, 0x78, 0x61, 0x70, 0x70, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x18, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x78, 0x61, 0x70, 0x70, 0x52, 0x6f, 0x6f,
	0x6d, 0x57, 0x68, 0x65, 0x72, 0x65, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x57, 0x78, 0x61, 0x70, 0x70, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xfc, 0x06, 0x0a, 0x10, 0x57, 0x78, 0x61, 0x70, 0x70, 0x52,
	0x6f, 0x6f, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x57, 0x78, 0x61, 0x70, 0x70, 0x52, 0x6f, 0x6f, 0x6d, 0x1a, 0x29, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x78, 0x61, 0x70, 0x70, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x78, 0x61, 0x70,
	0x70, 0x52, 0x6f, 0x6f, 0x6d, 0x1a, 0x29, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x57, 0x78, 0x61, 0x70, 0x70, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x41, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x18, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x78, 0x61, 0x70, 0x70, 0x52, 0x6f, 0x6f,
	0x6d, 0x57, 0x68, 0x65, 0x72, 0x65, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x57, 0x78, 0x61, 0x70, 0x70, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x78, 0x61, 0x70, 0x70,
	0x52, 0x6f, 0x6f, 0x6d, 0x57, 0x68, 0x65, 0x72, 0x65, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x78, 0x61, 0x70, 0x70, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x4c, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x78, 0x61, 0x70, 0x70, 0x52, 0x6f, 0x6f, 0x6d, 0x57,
	0x68, 0x65, 0x72, 0x65, 0x1a, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x57, 0x78, 0x61, 0x70, 0x70, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x08, 0x41, 0x64, 0x64,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x57, 0x78, 0x61, 0x70, 0x70, 0x52, 0x6f, 0x6f, 0x6d, 0x57, 0x68, 0x65, 0x72, 0x65, 0x1a,
	0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x78, 0x61, 0x70, 0x70,
	0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x75, 0x73, 0x68, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x78, 0x61, 0x70, 0x70, 0x52, 0x6f, 0x6f,
	0x6d, 0x57, 0x68, 0x65, 0x72, 0x65, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x57, 0x78, 0x61, 0x70, 0x70, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x57, 0x78, 0x61, 0x70, 0x70, 0x52, 0x6f, 0x6f, 0x6d, 0x57, 0x68, 0x65, 0x72, 0x65,
	0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x78, 0x61, 0x70,
	0x70, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4b, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57,
	0x78, 0x61, 0x70, 0x70, 0x52, 0x6f, 0x6f, 0x6d, 0x57, 0x68, 0x65, 0x72, 0x65, 0x1a, 0x1b, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x78, 0x61, 0x70, 0x70, 0x52, 0x6f,
	0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x18, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x78, 0x61, 0x70, 0x70, 0x52, 0x6f, 0x6f,
	0x6d, 0x57, 0x68, 0x65, 0x72, 0x65, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x57, 0x78, 0x61, 0x70, 0x70, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b,
	0x66, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x78, 0x61,
	0x70, 0x70, 0x52, 0x6f, 0x6f, 0x6d, 0x57, 0x68, 0x65, 0x72, 0x65, 0x1a, 0x1b, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x78, 0x61, 0x70, 0x70, 0x52, 0x6f, 0x6f, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x78, 0x61, 0x70, 0x70, 0x52, 0x6f, 0x6f, 0x6d,
	0x57, 0x68, 0x65, 0x72, 0x65, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x57, 0x78, 0x61, 0x70, 0x70, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wxappRoomService_proto_rawDescOnce sync.Once
	file_wxappRoomService_proto_rawDescData = file_wxappRoomService_proto_rawDesc
)

func file_wxappRoomService_proto_rawDescGZIP() []byte {
	file_wxappRoomService_proto_rawDescOnce.Do(func() {
		file_wxappRoomService_proto_rawDescData = protoimpl.X.CompressGZIP(file_wxappRoomService_proto_rawDescData)
	})
	return file_wxappRoomService_proto_rawDescData
}

var file_wxappRoomService_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_wxappRoomService_proto_goTypes = []interface{}{
	(*WxappRoomWhere)(nil),                  // 0: services.WxappRoomWhere
	(*WxappRoom)(nil),                       // 1: services.WxappRoom
	(*WxappRoomCreateOrUpdate)(nil),         // 2: services.WxappRoomCreateOrUpdate
	(*WxappLiveReplay)(nil),                 // 3: services.WxappLiveReplay
	(*WxappRoomResponse)(nil),               // 4: services.WxappRoomResponse
	(*WxappRoomCreateOrUpdateResponse)(nil), // 5: services.WxappRoomCreateOrUpdateResponse
	(*WxappLiveReplayResponse)(nil),         // 6: services.WxappLiveReplayResponse
	(*WxappRoomGoodsCommon2)(nil),           // 7: services.WxappRoomGoodsCommon2
	(*common.Pager)(nil),                    // 8: common.Pager
	(*common.Error)(nil),                    // 9: common.Error
	(*common.Info)(nil),                     // 10: common.Info
}
var file_wxappRoomService_proto_depIdxs = []int32{
	7,  // 0: services.WxappRoom.goods:type_name -> services.WxappRoomGoodsCommon2
	1,  // 1: services.WxappRoomResponse.entity:type_name -> services.WxappRoom
	8,  // 2: services.WxappRoomResponse.pager:type_name -> common.Pager
	1,  // 3: services.WxappRoomResponse.items:type_name -> services.WxappRoom
	9,  // 4: services.WxappRoomResponse.error:type_name -> common.Error
	10, // 5: services.WxappRoomResponse.info:type_name -> common.Info
	2,  // 6: services.WxappRoomCreateOrUpdateResponse.entity:type_name -> services.WxappRoomCreateOrUpdate
	9,  // 7: services.WxappRoomCreateOrUpdateResponse.error:type_name -> common.Error
	10, // 8: services.WxappRoomCreateOrUpdateResponse.info:type_name -> common.Info
	3,  // 9: services.WxappLiveReplayResponse.entity:type_name -> services.WxappLiveReplay
	8,  // 10: services.WxappLiveReplayResponse.pager:type_name -> common.Pager
	3,  // 11: services.WxappLiveReplayResponse.items:type_name -> services.WxappLiveReplay
	9,  // 12: services.WxappLiveReplayResponse.error:type_name -> common.Error
	10, // 13: services.WxappLiveReplayResponse.info:type_name -> common.Info
	0,  // 14: services.FrontWxappRoomService.Search:input_type -> services.WxappRoomWhere
	1,  // 15: services.WxappRoomService.Create:input_type -> services.WxappRoom
	1,  // 16: services.WxappRoomService.Update:input_type -> services.WxappRoom
	0,  // 17: services.WxappRoomService.Search:input_type -> services.WxappRoomWhere
	0,  // 18: services.WxappRoomService.Delete:input_type -> services.WxappRoomWhere
	0,  // 19: services.WxappRoomService.SearchLiveInfo:input_type -> services.WxappRoomWhere
	0,  // 20: services.WxappRoomService.AddGoods:input_type -> services.WxappRoomWhere
	0,  // 21: services.WxappRoomService.GetPushUrl:input_type -> services.WxappRoomWhere
	0,  // 22: services.WxappRoomService.GetSharedCode:input_type -> services.WxappRoomWhere
	0,  // 23: services.WxappRoomService.UpdateFeedPublic:input_type -> services.WxappRoomWhere
	0,  // 24: services.WxappRoomService.UpdateReplay:input_type -> services.WxappRoomWhere
	0,  // 25: services.WxappRoomService.UpdateKf:input_type -> services.WxappRoomWhere
	0,  // 26: services.WxappRoomService.UpdateComment:input_type -> services.WxappRoomWhere
	4,  // 27: services.FrontWxappRoomService.Search:output_type -> services.WxappRoomResponse
	5,  // 28: services.WxappRoomService.Create:output_type -> services.WxappRoomCreateOrUpdateResponse
	5,  // 29: services.WxappRoomService.Update:output_type -> services.WxappRoomCreateOrUpdateResponse
	4,  // 30: services.WxappRoomService.Search:output_type -> services.WxappRoomResponse
	4,  // 31: services.WxappRoomService.Delete:output_type -> services.WxappRoomResponse
	6,  // 32: services.WxappRoomService.SearchLiveInfo:output_type -> services.WxappLiveReplayResponse
	4,  // 33: services.WxappRoomService.AddGoods:output_type -> services.WxappRoomResponse
	4,  // 34: services.WxappRoomService.GetPushUrl:output_type -> services.WxappRoomResponse
	4,  // 35: services.WxappRoomService.GetSharedCode:output_type -> services.WxappRoomResponse
	4,  // 36: services.WxappRoomService.UpdateFeedPublic:output_type -> services.WxappRoomResponse
	4,  // 37: services.WxappRoomService.UpdateReplay:output_type -> services.WxappRoomResponse
	4,  // 38: services.WxappRoomService.UpdateKf:output_type -> services.WxappRoomResponse
	4,  // 39: services.WxappRoomService.UpdateComment:output_type -> services.WxappRoomResponse
	27, // [27:40] is the sub-list for method output_type
	14, // [14:27] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_wxappRoomService_proto_init() }
func file_wxappRoomService_proto_init() {
	if File_wxappRoomService_proto != nil {
		return
	}
	file_wxappRoomGoodsService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_wxappRoomService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WxappRoomWhere); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wxappRoomService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WxappRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wxappRoomService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WxappRoomCreateOrUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wxappRoomService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WxappLiveReplay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wxappRoomService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WxappRoomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wxappRoomService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WxappRoomCreateOrUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wxappRoomService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WxappLiveReplayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wxappRoomService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_wxappRoomService_proto_goTypes,
		DependencyIndexes: file_wxappRoomService_proto_depIdxs,
		MessageInfos:      file_wxappRoomService_proto_msgTypes,
	}.Build()
	File_wxappRoomService_proto = out.File
	file_wxappRoomService_proto_rawDesc = nil
	file_wxappRoomService_proto_goTypes = nil
	file_wxappRoomService_proto_depIdxs = nil
}
