// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: wxappRoomRoleService.proto

package services

import (
	fmt "fmt"
	_ "github.com/geiqin/microkit/protobuf/common"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "context"
	api "github.com/micro/go-micro/v2/api"
	client "github.com/micro/go-micro/v2/client"
	server "github.com/micro/go-micro/v2/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for WxappRoomRoleService service

func NewWxappRoomRoleServiceEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for WxappRoomRoleService service

type WxappRoomRoleService interface {
	Create(ctx context.Context, in *WxappRoomRoleWhere, opts ...client.CallOption) (*WxappRoomRoleCreateOrUpdateResponse, error)
	Delete(ctx context.Context, in *WxappRoomRoleWhere, opts ...client.CallOption) (*WxappRoomRoleResponse, error)
	Search(ctx context.Context, in *WxappRoomRoleWhere, opts ...client.CallOption) (*WxappRoomRoleResponse, error)
}

type wxappRoomRoleService struct {
	c    client.Client
	name string
}

func NewWxappRoomRoleService(name string, c client.Client) WxappRoomRoleService {
	return &wxappRoomRoleService{
		c:    c,
		name: name,
	}
}

func (c *wxappRoomRoleService) Create(ctx context.Context, in *WxappRoomRoleWhere, opts ...client.CallOption) (*WxappRoomRoleCreateOrUpdateResponse, error) {
	req := c.c.NewRequest(c.name, "WxappRoomRoleService.Create", in)
	out := new(WxappRoomRoleCreateOrUpdateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wxappRoomRoleService) Delete(ctx context.Context, in *WxappRoomRoleWhere, opts ...client.CallOption) (*WxappRoomRoleResponse, error) {
	req := c.c.NewRequest(c.name, "WxappRoomRoleService.Delete", in)
	out := new(WxappRoomRoleResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wxappRoomRoleService) Search(ctx context.Context, in *WxappRoomRoleWhere, opts ...client.CallOption) (*WxappRoomRoleResponse, error) {
	req := c.c.NewRequest(c.name, "WxappRoomRoleService.Search", in)
	out := new(WxappRoomRoleResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for WxappRoomRoleService service

type WxappRoomRoleServiceHandler interface {
	Create(context.Context, *WxappRoomRoleWhere, *WxappRoomRoleCreateOrUpdateResponse) error
	Delete(context.Context, *WxappRoomRoleWhere, *WxappRoomRoleResponse) error
	Search(context.Context, *WxappRoomRoleWhere, *WxappRoomRoleResponse) error
}

func RegisterWxappRoomRoleServiceHandler(s server.Server, hdlr WxappRoomRoleServiceHandler, opts ...server.HandlerOption) error {
	type wxappRoomRoleService interface {
		Create(ctx context.Context, in *WxappRoomRoleWhere, out *WxappRoomRoleCreateOrUpdateResponse) error
		Delete(ctx context.Context, in *WxappRoomRoleWhere, out *WxappRoomRoleResponse) error
		Search(ctx context.Context, in *WxappRoomRoleWhere, out *WxappRoomRoleResponse) error
	}
	type WxappRoomRoleService struct {
		wxappRoomRoleService
	}
	h := &wxappRoomRoleServiceHandler{hdlr}
	return s.Handle(s.NewHandler(&WxappRoomRoleService{h}, opts...))
}

type wxappRoomRoleServiceHandler struct {
	WxappRoomRoleServiceHandler
}

func (h *wxappRoomRoleServiceHandler) Create(ctx context.Context, in *WxappRoomRoleWhere, out *WxappRoomRoleCreateOrUpdateResponse) error {
	return h.WxappRoomRoleServiceHandler.Create(ctx, in, out)
}

func (h *wxappRoomRoleServiceHandler) Delete(ctx context.Context, in *WxappRoomRoleWhere, out *WxappRoomRoleResponse) error {
	return h.WxappRoomRoleServiceHandler.Delete(ctx, in, out)
}

func (h *wxappRoomRoleServiceHandler) Search(ctx context.Context, in *WxappRoomRoleWhere, out *WxappRoomRoleResponse) error {
	return h.WxappRoomRoleServiceHandler.Search(ctx, in, out)
}
