// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: couponService.proto

package services

import (
	common "github.com/geiqin/microkit/protobuf/common"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CouponWhere struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged    int32 `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Top      int32 `protobuf:"varint,3,opt,name=top,proto3" json:"top"`
	Id       int64 `protobuf:"varint,4,opt,name=id,proto3" json:"id"`
	// @inject_tag: gorm:"-"
	Ids              []int64 `protobuf:"varint,5,rep,packed,name=ids,proto3" json:"ids" gorm:"-"`
	Keywords         string  `protobuf:"bytes,6,opt,name=keywords,proto3" json:"keywords"`
	Status           int32   `protobuf:"varint,7,opt,name=status,proto3" json:"status"`
	PreferentialType int32   `protobuf:"varint,8,opt,name=preferential_type,json=preferentialType,proto3" json:"preferential_type"`
	CustomerId       int64   `protobuf:"varint,9,opt,name=customer_id,json=customerId,proto3" json:"customer_id"`
	Num              int32   `protobuf:"varint,10,opt,name=num,proto3" json:"num"`
}

func (x *CouponWhere) Reset() {
	*x = CouponWhere{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couponService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CouponWhere) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CouponWhere) ProtoMessage() {}

func (x *CouponWhere) ProtoReflect() protoreflect.Message {
	mi := &file_couponService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CouponWhere.ProtoReflect.Descriptor instead.
func (*CouponWhere) Descriptor() ([]byte, []int) {
	return file_couponService_proto_rawDescGZIP(), []int{0}
}

func (x *CouponWhere) GetPaged() int32 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *CouponWhere) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *CouponWhere) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *CouponWhere) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CouponWhere) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *CouponWhere) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *CouponWhere) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CouponWhere) GetPreferentialType() int32 {
	if x != nil {
		return x.PreferentialType
	}
	return 0
}

func (x *CouponWhere) GetCustomerId() int64 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

func (x *CouponWhere) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

//优惠劵
type Coupon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	CouponSn             string  `protobuf:"bytes,3,opt,name=coupon_sn,json=couponSn,proto3" json:"coupon_sn"`
	Title                string  `protobuf:"bytes,4,opt,name=title,proto3" json:"title"`
	Total                int32   `protobuf:"varint,5,opt,name=total,proto3" json:"total"`
	Stock                int32   `protobuf:"varint,6,opt,name=stock,proto3" json:"stock"`
	IsAtLeast            bool    `protobuf:"varint,7,opt,name=is_at_least,json=isAtLeast,proto3" json:"is_at_least"`
	AtLeast              float32 `protobuf:"fixed32,8,opt,name=at_least,json=atLeast,proto3" json:"at_least"`
	EffectiveType        int32   `protobuf:"varint,9,opt,name=effective_type,json=effectiveType,proto3" json:"effective_type"`
	EffectiveFixedTerm   int32   `protobuf:"varint,10,opt,name=effective_fixed_term,json=effectiveFixedTerm,proto3" json:"effective_fixed_term"`
	EffectiveStartAt     string  `protobuf:"bytes,11,opt,name=effective_start_at,json=effectiveStartAt,proto3" json:"effective_start_at"`
	EffectiveEndAt       string  `protobuf:"bytes,12,opt,name=effective_end_at,json=effectiveEndAt,proto3" json:"effective_end_at"`
	ExpireNotice         bool    `protobuf:"varint,13,opt,name=expire_notice,json=expireNotice,proto3" json:"expire_notice"`
	IsExpired            bool    `protobuf:"varint,14,opt,name=is_expired,json=isExpired,proto3" json:"is_expired"`
	IsOngoing            bool    `protobuf:"varint,15,opt,name=is_ongoing,json=isOngoing,proto3" json:"is_ongoing"`
	IsForbidPreference   bool    `protobuf:"varint,16,opt,name=is_forbid_preference,json=isForbidPreference,proto3" json:"is_forbid_preference"`
	IsShare              bool    `protobuf:"varint,17,opt,name=is_share,json=isShare,proto3" json:"is_share"`
	IsCancel             bool    `protobuf:"varint,18,opt,name=is_cancel,json=isCancel,proto3" json:"is_cancel"`
	IsDelete             bool    `protobuf:"varint,19,opt,name=is_delete,json=isDelete,proto3" json:"is_delete"`
	IsSyncWeixin         bool    `protobuf:"varint,20,opt,name=is_sync_weixin,json=isSyncWeixin,proto3" json:"is_sync_weixin"`
	NeedUserLevel        int32   `protobuf:"varint,21,opt,name=need_user_level,json=needUserLevel,proto3" json:"need_user_level"`
	PreferentialType     int32   `protobuf:"varint,22,opt,name=preferential_type,json=preferentialType,proto3" json:"preferential_type"`
	PreferentialMoney    float32 `protobuf:"fixed32,23,opt,name=preferential_money,json=preferentialMoney,proto3" json:"preferential_money"`
	PreferentialDiscount float32 `protobuf:"fixed32,24,opt,name=preferential_discount,json=preferentialDiscount,proto3" json:"preferential_discount"`
	Quota                int32   `protobuf:"varint,25,opt,name=quota,proto3" json:"quota"`
	ExchangeNum          int32   `protobuf:"varint,26,opt,name=exchange_num,json=exchangeNum,proto3" json:"exchange_num"`
	RangeType            string  `protobuf:"bytes,27,opt,name=range_type,json=rangeType,proto3" json:"range_type"`
	ServicePhone         string  `protobuf:"bytes,28,opt,name=service_phone,json=servicePhone,proto3" json:"service_phone"`
	TotalFansTaked       int32   `protobuf:"varint,29,opt,name=total_fans_taked,json=totalFansTaked,proto3" json:"total_fans_taked"`
	TotalFansUsed        int32   `protobuf:"varint,30,opt,name=total_fans_used,json=totalFansUsed,proto3" json:"total_fans_used"`
	TotalTaked           int32   `protobuf:"varint,31,opt,name=total_taked,json=totalTaked,proto3" json:"total_taked"`
	TotalUsed            int32   `protobuf:"varint,32,opt,name=total_used,json=totalUsed,proto3" json:"total_used"`
	CouponUrl            string  `protobuf:"bytes,33,opt,name=coupon_url,json=couponUrl,proto3" json:"coupon_url"`
	Description          string  `protobuf:"bytes,34,opt,name=description,proto3" json:"description"`
	Status               int32   `protobuf:"varint,35,opt,name=status,proto3" json:"status"`
	WeixinTitle          string  `protobuf:"bytes,36,opt,name=weixin_title,json=weixinTitle,proto3" json:"weixin_title"`
	WeixinSubTitle       string  `protobuf:"bytes,37,opt,name=weixin_sub_title,json=weixinSubTitle,proto3" json:"weixin_sub_title"`
	WeixinColor          string  `protobuf:"bytes,38,opt,name=weixin_color,json=weixinColor,proto3" json:"weixin_color"`
	ReceiveType          string  `protobuf:"bytes,39,opt,name=receive_type,json=receiveType,proto3" json:"receive_type"`
	CreatedAt            string  `protobuf:"bytes,40,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt            string  `protobuf:"bytes,41,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	// @inject_tag: gorm:"foreignKey:CouponId"
	Tickets []*CouponTicket `protobuf:"bytes,42,rep,name=tickets,proto3" json:"tickets" gorm:"foreignKey:CouponId"`
	// @inject_tag: gorm:"foreignKey:CouponId"
	Goodses []*CouponGoods `protobuf:"bytes,43,rep,name=goodses,proto3" json:"goodses" gorm:"foreignKey:CouponId"`
	// @inject_tag: gorm:"-"
	Ids       []int64 `protobuf:"varint,44,rep,packed,name=ids,proto3" json:"ids" gorm:"-"`
	IsReceive bool    `protobuf:"varint,45,opt,name=is_receive,json=isReceive,proto3" json:"is_receive"` // 是否可领取
}

func (x *Coupon) Reset() {
	*x = Coupon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couponService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coupon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coupon) ProtoMessage() {}

func (x *Coupon) ProtoReflect() protoreflect.Message {
	mi := &file_couponService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coupon.ProtoReflect.Descriptor instead.
func (*Coupon) Descriptor() ([]byte, []int) {
	return file_couponService_proto_rawDescGZIP(), []int{1}
}

func (x *Coupon) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Coupon) GetCouponSn() string {
	if x != nil {
		return x.CouponSn
	}
	return ""
}

func (x *Coupon) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Coupon) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Coupon) GetStock() int32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *Coupon) GetIsAtLeast() bool {
	if x != nil {
		return x.IsAtLeast
	}
	return false
}

func (x *Coupon) GetAtLeast() float32 {
	if x != nil {
		return x.AtLeast
	}
	return 0
}

func (x *Coupon) GetEffectiveType() int32 {
	if x != nil {
		return x.EffectiveType
	}
	return 0
}

func (x *Coupon) GetEffectiveFixedTerm() int32 {
	if x != nil {
		return x.EffectiveFixedTerm
	}
	return 0
}

func (x *Coupon) GetEffectiveStartAt() string {
	if x != nil {
		return x.EffectiveStartAt
	}
	return ""
}

func (x *Coupon) GetEffectiveEndAt() string {
	if x != nil {
		return x.EffectiveEndAt
	}
	return ""
}

func (x *Coupon) GetExpireNotice() bool {
	if x != nil {
		return x.ExpireNotice
	}
	return false
}

func (x *Coupon) GetIsExpired() bool {
	if x != nil {
		return x.IsExpired
	}
	return false
}

func (x *Coupon) GetIsOngoing() bool {
	if x != nil {
		return x.IsOngoing
	}
	return false
}

func (x *Coupon) GetIsForbidPreference() bool {
	if x != nil {
		return x.IsForbidPreference
	}
	return false
}

func (x *Coupon) GetIsShare() bool {
	if x != nil {
		return x.IsShare
	}
	return false
}

func (x *Coupon) GetIsCancel() bool {
	if x != nil {
		return x.IsCancel
	}
	return false
}

func (x *Coupon) GetIsDelete() bool {
	if x != nil {
		return x.IsDelete
	}
	return false
}

func (x *Coupon) GetIsSyncWeixin() bool {
	if x != nil {
		return x.IsSyncWeixin
	}
	return false
}

func (x *Coupon) GetNeedUserLevel() int32 {
	if x != nil {
		return x.NeedUserLevel
	}
	return 0
}

func (x *Coupon) GetPreferentialType() int32 {
	if x != nil {
		return x.PreferentialType
	}
	return 0
}

func (x *Coupon) GetPreferentialMoney() float32 {
	if x != nil {
		return x.PreferentialMoney
	}
	return 0
}

func (x *Coupon) GetPreferentialDiscount() float32 {
	if x != nil {
		return x.PreferentialDiscount
	}
	return 0
}

func (x *Coupon) GetQuota() int32 {
	if x != nil {
		return x.Quota
	}
	return 0
}

func (x *Coupon) GetExchangeNum() int32 {
	if x != nil {
		return x.ExchangeNum
	}
	return 0
}

func (x *Coupon) GetRangeType() string {
	if x != nil {
		return x.RangeType
	}
	return ""
}

func (x *Coupon) GetServicePhone() string {
	if x != nil {
		return x.ServicePhone
	}
	return ""
}

func (x *Coupon) GetTotalFansTaked() int32 {
	if x != nil {
		return x.TotalFansTaked
	}
	return 0
}

func (x *Coupon) GetTotalFansUsed() int32 {
	if x != nil {
		return x.TotalFansUsed
	}
	return 0
}

func (x *Coupon) GetTotalTaked() int32 {
	if x != nil {
		return x.TotalTaked
	}
	return 0
}

func (x *Coupon) GetTotalUsed() int32 {
	if x != nil {
		return x.TotalUsed
	}
	return 0
}

func (x *Coupon) GetCouponUrl() string {
	if x != nil {
		return x.CouponUrl
	}
	return ""
}

func (x *Coupon) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Coupon) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Coupon) GetWeixinTitle() string {
	if x != nil {
		return x.WeixinTitle
	}
	return ""
}

func (x *Coupon) GetWeixinSubTitle() string {
	if x != nil {
		return x.WeixinSubTitle
	}
	return ""
}

func (x *Coupon) GetWeixinColor() string {
	if x != nil {
		return x.WeixinColor
	}
	return ""
}

func (x *Coupon) GetReceiveType() string {
	if x != nil {
		return x.ReceiveType
	}
	return ""
}

func (x *Coupon) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Coupon) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Coupon) GetTickets() []*CouponTicket {
	if x != nil {
		return x.Tickets
	}
	return nil
}

func (x *Coupon) GetGoodses() []*CouponGoods {
	if x != nil {
		return x.Goodses
	}
	return nil
}

func (x *Coupon) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *Coupon) GetIsReceive() bool {
	if x != nil {
		return x.IsReceive
	}
	return false
}

//
type CouponResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *Coupon       `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*Coupon     `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Error  *common.Error `protobuf:"bytes,4,opt,name=error,proto3" json:"error"`
	Info   *common.Info  `protobuf:"bytes,5,opt,name=info,proto3" json:"info"`
}

func (x *CouponResponse) Reset() {
	*x = CouponResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_couponService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CouponResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CouponResponse) ProtoMessage() {}

func (x *CouponResponse) ProtoReflect() protoreflect.Message {
	mi := &file_couponService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CouponResponse.ProtoReflect.Descriptor instead.
func (*CouponResponse) Descriptor() ([]byte, []int) {
	return file_couponService_proto_rawDescGZIP(), []int{2}
}

func (x *CouponResponse) GetEntity() *Coupon {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *CouponResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *CouponResponse) GetItems() []*Coupon {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *CouponResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *CouponResponse) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_couponService_proto protoreflect.FileDescriptor

var file_couponService_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a,
	0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x18, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x88, 0x02, 0x0a, 0x0b, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x57, 0x68, 0x65, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x6f, 0x70, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x70,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e,
	0x75, 0x6d, 0x22, 0xf9, 0x0b, 0x0a, 0x06, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x73, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x0b,
	0x69, 0x73, 0x5f, 0x61, 0x74, 0x5f, 0x6c, 0x65, 0x61, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x41, 0x74, 0x4c, 0x65, 0x61, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x74, 0x5f, 0x6c, 0x65, 0x61, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07,
	0x61, 0x74, 0x4c, 0x65, 0x61, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30,
	0x0a, 0x14, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x66, 0x69, 0x78, 0x65,
	0x64, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x46, 0x69, 0x78, 0x65, 0x64, 0x54, 0x65, 0x72, 0x6d,
	0x12, 0x2c, 0x0a, 0x12, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x28,
	0x0a, 0x10, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x4f, 0x6e, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x12, 0x30, 0x0a, 0x14, 0x69,
	0x73, 0x5f, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x73, 0x46, 0x6f, 0x72,
	0x62, 0x69, 0x64, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x63,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x77, 0x65,
	0x69, 0x78, 0x69, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x79,
	0x6e, 0x63, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x65, 0x64,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x6e, 0x65, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x2b, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x70, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a,
	0x12, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x6d, 0x6f,
	0x6e, 0x65, 0x79, 0x18, 0x17, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x70, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x15,
	0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x02, 0x52, 0x14, 0x70, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x28,
	0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x66, 0x61, 0x6e, 0x73, 0x5f, 0x74, 0x61, 0x6b,
	0x65, 0x64, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46,
	0x61, 0x6e, 0x73, 0x54, 0x61, 0x6b, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x66, 0x61, 0x6e, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x61, 0x6e, 0x73, 0x55, 0x73, 0x65, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x61, 0x6b, 0x65, 0x64, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x61, 0x6b, 0x65,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18,
	0x20, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x21,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x22,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x23, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x65, 0x69,
	0x78, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10,
	0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x53, 0x75,
	0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e,
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x65,
	0x69, 0x78, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x2a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x07,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x65, 0x73, 0x18, 0x2b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x47,
	0x6f, 0x6f, 0x64, 0x73, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x65, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x2c, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x18, 0x2d, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x22, 0xce,
	0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x28, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72,
	0x12, 0x26, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x20, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x32,
	0xeb, 0x02, 0x0a, 0x0f, 0x4d, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x10, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x1a, 0x18, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x06, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x34, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0f, 0x55, 0x6e, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x09, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x3c, 0x0a, 0x07, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x57, 0x68, 0x65, 0x72,
	0x65, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xde, 0x03,
	0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x36, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x1a, 0x18, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x3b, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x57, 0x68, 0x65, 0x72, 0x65,
	0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x06,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x57, 0x68, 0x65, 0x72, 0x65, 0x1a, 0x18, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x03, 0x47, 0x65, 0x74,
	0x12, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x36,
	0x0a, 0x09, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x57, 0x68, 0x65, 0x72, 0x65, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x04, 0x47, 0x69, 0x76, 0x65, 0x12, 0x15, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x57, 0x68, 0x65,
	0x72, 0x65, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0c,
	0x5a, 0x0a, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_couponService_proto_rawDescOnce sync.Once
	file_couponService_proto_rawDescData = file_couponService_proto_rawDesc
)

func file_couponService_proto_rawDescGZIP() []byte {
	file_couponService_proto_rawDescOnce.Do(func() {
		file_couponService_proto_rawDescData = protoimpl.X.CompressGZIP(file_couponService_proto_rawDescData)
	})
	return file_couponService_proto_rawDescData
}

var file_couponService_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_couponService_proto_goTypes = []interface{}{
	(*CouponWhere)(nil),    // 0: services.CouponWhere
	(*Coupon)(nil),         // 1: services.Coupon
	(*CouponResponse)(nil), // 2: services.CouponResponse
	(*CouponTicket)(nil),   // 3: services.CouponTicket
	(*CouponGoods)(nil),    // 4: services.CouponGoods
	(*common.Pager)(nil),   // 5: common.Pager
	(*common.Error)(nil),   // 6: common.Error
	(*common.Info)(nil),    // 7: common.Info
	(*common.Empty)(nil),   // 8: common.Empty
}
var file_couponService_proto_depIdxs = []int32{
	3,  // 0: services.Coupon.tickets:type_name -> services.CouponTicket
	4,  // 1: services.Coupon.goodses:type_name -> services.CouponGoods
	1,  // 2: services.CouponResponse.entity:type_name -> services.Coupon
	5,  // 3: services.CouponResponse.pager:type_name -> common.Pager
	1,  // 4: services.CouponResponse.items:type_name -> services.Coupon
	6,  // 5: services.CouponResponse.error:type_name -> common.Error
	7,  // 6: services.CouponResponse.info:type_name -> common.Info
	1,  // 7: services.MyCouponService.Get:input_type -> services.Coupon
	1,  // 8: services.MyCouponService.Detail:input_type -> services.Coupon
	1,  // 9: services.MyCouponService.List:input_type -> services.Coupon
	8,  // 10: services.MyCouponService.UncollectedList:input_type -> common.Empty
	1,  // 11: services.MyCouponService.ValidList:input_type -> services.Coupon
	0,  // 12: services.MyCouponService.Receive:input_type -> services.CouponWhere
	1,  // 13: services.CouponService.Create:input_type -> services.Coupon
	1,  // 14: services.CouponService.Update:input_type -> services.Coupon
	0,  // 15: services.CouponService.Delete:input_type -> services.CouponWhere
	0,  // 16: services.CouponService.Cancel:input_type -> services.CouponWhere
	1,  // 17: services.CouponService.Get:input_type -> services.Coupon
	8,  // 18: services.CouponService.ValidList:input_type -> common.Empty
	0,  // 19: services.CouponService.Search:input_type -> services.CouponWhere
	0,  // 20: services.CouponService.Give:input_type -> services.CouponWhere
	2,  // 21: services.MyCouponService.Get:output_type -> services.CouponResponse
	2,  // 22: services.MyCouponService.Detail:output_type -> services.CouponResponse
	2,  // 23: services.MyCouponService.List:output_type -> services.CouponResponse
	2,  // 24: services.MyCouponService.UncollectedList:output_type -> services.CouponResponse
	2,  // 25: services.MyCouponService.ValidList:output_type -> services.CouponResponse
	2,  // 26: services.MyCouponService.Receive:output_type -> services.CouponResponse
	2,  // 27: services.CouponService.Create:output_type -> services.CouponResponse
	2,  // 28: services.CouponService.Update:output_type -> services.CouponResponse
	2,  // 29: services.CouponService.Delete:output_type -> services.CouponResponse
	2,  // 30: services.CouponService.Cancel:output_type -> services.CouponResponse
	2,  // 31: services.CouponService.Get:output_type -> services.CouponResponse
	2,  // 32: services.CouponService.ValidList:output_type -> services.CouponResponse
	2,  // 33: services.CouponService.Search:output_type -> services.CouponResponse
	2,  // 34: services.CouponService.Give:output_type -> services.CouponResponse
	21, // [21:35] is the sub-list for method output_type
	7,  // [7:21] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_couponService_proto_init() }
func file_couponService_proto_init() {
	if File_couponService_proto != nil {
		return
	}
	file_couponGoodsService_proto_init()
	file_couponTicketService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_couponService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CouponWhere); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_couponService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coupon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_couponService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CouponResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_couponService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_couponService_proto_goTypes,
		DependencyIndexes: file_couponService_proto_depIdxs,
		MessageInfos:      file_couponService_proto_msgTypes,
	}.Build()
	File_couponService_proto = out.File
	file_couponService_proto_rawDesc = nil
	file_couponService_proto_goTypes = nil
	file_couponService_proto_depIdxs = nil
}
