// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: groupCustomerStatsService.proto

package services

import (
	fmt "fmt"
	_ "github.com/geiqin/microkit/protobuf/common"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "context"
	api "github.com/micro/go-micro/v2/api"
	client "github.com/micro/go-micro/v2/client"
	server "github.com/micro/go-micro/v2/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for GroupCustomerStatsService service

func NewGroupCustomerStatsServiceEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for GroupCustomerStatsService service

type GroupCustomerStatsService interface {
	// 查询用户汇总统计
	Search(ctx context.Context, in *GroupStatsWhere, opts ...client.CallOption) (*GroupCustomerStatsResponse, error)
	// 获取用户汇总统计
	Get(ctx context.Context, in *GroupStatsWhere, opts ...client.CallOption) (*GroupCustomerStatsResponse, error)
	// 获取用户汇总统计列表
	List(ctx context.Context, in *GroupStatsWhere, opts ...client.CallOption) (*GroupCustomerStatsResponse, error)
}

type groupCustomerStatsService struct {
	c    client.Client
	name string
}

func NewGroupCustomerStatsService(name string, c client.Client) GroupCustomerStatsService {
	return &groupCustomerStatsService{
		c:    c,
		name: name,
	}
}

func (c *groupCustomerStatsService) Search(ctx context.Context, in *GroupStatsWhere, opts ...client.CallOption) (*GroupCustomerStatsResponse, error) {
	req := c.c.NewRequest(c.name, "GroupCustomerStatsService.Search", in)
	out := new(GroupCustomerStatsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupCustomerStatsService) Get(ctx context.Context, in *GroupStatsWhere, opts ...client.CallOption) (*GroupCustomerStatsResponse, error) {
	req := c.c.NewRequest(c.name, "GroupCustomerStatsService.Get", in)
	out := new(GroupCustomerStatsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupCustomerStatsService) List(ctx context.Context, in *GroupStatsWhere, opts ...client.CallOption) (*GroupCustomerStatsResponse, error) {
	req := c.c.NewRequest(c.name, "GroupCustomerStatsService.List", in)
	out := new(GroupCustomerStatsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GroupCustomerStatsService service

type GroupCustomerStatsServiceHandler interface {
	// 查询用户汇总统计
	Search(context.Context, *GroupStatsWhere, *GroupCustomerStatsResponse) error
	// 获取用户汇总统计
	Get(context.Context, *GroupStatsWhere, *GroupCustomerStatsResponse) error
	// 获取用户汇总统计列表
	List(context.Context, *GroupStatsWhere, *GroupCustomerStatsResponse) error
}

func RegisterGroupCustomerStatsServiceHandler(s server.Server, hdlr GroupCustomerStatsServiceHandler, opts ...server.HandlerOption) error {
	type groupCustomerStatsService interface {
		Search(ctx context.Context, in *GroupStatsWhere, out *GroupCustomerStatsResponse) error
		Get(ctx context.Context, in *GroupStatsWhere, out *GroupCustomerStatsResponse) error
		List(ctx context.Context, in *GroupStatsWhere, out *GroupCustomerStatsResponse) error
	}
	type GroupCustomerStatsService struct {
		groupCustomerStatsService
	}
	h := &groupCustomerStatsServiceHandler{hdlr}
	return s.Handle(s.NewHandler(&GroupCustomerStatsService{h}, opts...))
}

type groupCustomerStatsServiceHandler struct {
	GroupCustomerStatsServiceHandler
}

func (h *groupCustomerStatsServiceHandler) Search(ctx context.Context, in *GroupStatsWhere, out *GroupCustomerStatsResponse) error {
	return h.GroupCustomerStatsServiceHandler.Search(ctx, in, out)
}

func (h *groupCustomerStatsServiceHandler) Get(ctx context.Context, in *GroupStatsWhere, out *GroupCustomerStatsResponse) error {
	return h.GroupCustomerStatsServiceHandler.Get(ctx, in, out)
}

func (h *groupCustomerStatsServiceHandler) List(ctx context.Context, in *GroupStatsWhere, out *GroupCustomerStatsResponse) error {
	return h.GroupCustomerStatsServiceHandler.List(ctx, in, out)
}
