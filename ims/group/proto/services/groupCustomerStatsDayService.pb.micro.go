// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: groupCustomerStatsDayService.proto

package services

import (
	fmt "fmt"
	_ "github.com/geiqin/microkit/protobuf/common"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "context"
	api "github.com/micro/go-micro/v2/api"
	client "github.com/micro/go-micro/v2/client"
	server "github.com/micro/go-micro/v2/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for GroupCustomerStatsDayService service

func NewGroupCustomerStatsDayServiceEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for GroupCustomerStatsDayService service

type GroupCustomerStatsDayService interface {
	// 查询活动统计
	Search(ctx context.Context, in *GroupStatsWhere, opts ...client.CallOption) (*GroupCustomerStatsDayResponse, error)
	// 获取活动统计
	Get(ctx context.Context, in *GroupStatsWhere, opts ...client.CallOption) (*GroupCustomerStatsDayResponse, error)
	// 获取活动统计列表
	List(ctx context.Context, in *GroupStatsWhere, opts ...client.CallOption) (*GroupCustomerStatsDayResponse, error)
}

type groupCustomerStatsDayService struct {
	c    client.Client
	name string
}

func NewGroupCustomerStatsDayService(name string, c client.Client) GroupCustomerStatsDayService {
	return &groupCustomerStatsDayService{
		c:    c,
		name: name,
	}
}

func (c *groupCustomerStatsDayService) Search(ctx context.Context, in *GroupStatsWhere, opts ...client.CallOption) (*GroupCustomerStatsDayResponse, error) {
	req := c.c.NewRequest(c.name, "GroupCustomerStatsDayService.Search", in)
	out := new(GroupCustomerStatsDayResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupCustomerStatsDayService) Get(ctx context.Context, in *GroupStatsWhere, opts ...client.CallOption) (*GroupCustomerStatsDayResponse, error) {
	req := c.c.NewRequest(c.name, "GroupCustomerStatsDayService.Get", in)
	out := new(GroupCustomerStatsDayResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupCustomerStatsDayService) List(ctx context.Context, in *GroupStatsWhere, opts ...client.CallOption) (*GroupCustomerStatsDayResponse, error) {
	req := c.c.NewRequest(c.name, "GroupCustomerStatsDayService.List", in)
	out := new(GroupCustomerStatsDayResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GroupCustomerStatsDayService service

type GroupCustomerStatsDayServiceHandler interface {
	// 查询活动统计
	Search(context.Context, *GroupStatsWhere, *GroupCustomerStatsDayResponse) error
	// 获取活动统计
	Get(context.Context, *GroupStatsWhere, *GroupCustomerStatsDayResponse) error
	// 获取活动统计列表
	List(context.Context, *GroupStatsWhere, *GroupCustomerStatsDayResponse) error
}

func RegisterGroupCustomerStatsDayServiceHandler(s server.Server, hdlr GroupCustomerStatsDayServiceHandler, opts ...server.HandlerOption) error {
	type groupCustomerStatsDayService interface {
		Search(ctx context.Context, in *GroupStatsWhere, out *GroupCustomerStatsDayResponse) error
		Get(ctx context.Context, in *GroupStatsWhere, out *GroupCustomerStatsDayResponse) error
		List(ctx context.Context, in *GroupStatsWhere, out *GroupCustomerStatsDayResponse) error
	}
	type GroupCustomerStatsDayService struct {
		groupCustomerStatsDayService
	}
	h := &groupCustomerStatsDayServiceHandler{hdlr}
	return s.Handle(s.NewHandler(&GroupCustomerStatsDayService{h}, opts...))
}

type groupCustomerStatsDayServiceHandler struct {
	GroupCustomerStatsDayServiceHandler
}

func (h *groupCustomerStatsDayServiceHandler) Search(ctx context.Context, in *GroupStatsWhere, out *GroupCustomerStatsDayResponse) error {
	return h.GroupCustomerStatsDayServiceHandler.Search(ctx, in, out)
}

func (h *groupCustomerStatsDayServiceHandler) Get(ctx context.Context, in *GroupStatsWhere, out *GroupCustomerStatsDayResponse) error {
	return h.GroupCustomerStatsDayServiceHandler.Get(ctx, in, out)
}

func (h *groupCustomerStatsDayServiceHandler) List(ctx context.Context, in *GroupStatsWhere, out *GroupCustomerStatsDayResponse) error {
	return h.GroupCustomerStatsDayServiceHandler.List(ctx, in, out)
}
